consumes:
- application/json
definitions:
  AddNodeConnectionPayload:
    example:
      node:
        host: 127.0.0.1
        port: 3000
        tlsName: ""
    properties:
      node:
        $ref: '#/definitions/NodeSeed'
    required:
    - node
    title: AddNodeConnectionPayload
    type: object
  AerospikeAmcBackupResponse:
    description: Backup object (default view)
    example:
      clusterId: Veritatis quo perferendis ab necessitatibus.
      createDate: 6.728183e+18
      destinationAddress: Tenetur magnam delectus aut voluptas commodi.
      destinationPath: Similique ab amet enim et illo voluptatem.
      error: In autem quaerat.
      finishDate: 4.002727e+18
      id: Amet laborum enim.
      metadataOnly: false
      namespace: Quia sint est praesentium soluta.
      progress: 4.0863476e+18
      scanPriority: 1.996247e+17
      sets: Vel quam.
      status: Ut laborum cupiditate modi dolorum hic.
      terminateOnClusterChange: true
    properties:
      clusterId:
        description: Cluster Id
        example: Veritatis quo perferendis ab necessitatibus.
        type: string
      createDate:
        description: The date when the backup was created
        example: 6.728183e+18
        format: int64
        type: integer
      destinationAddress:
        description: Host on which the backup was created
        example: Tenetur magnam delectus aut voluptas commodi.
        type: string
      destinationPath:
        description: Directory where the backup was created
        example: Similique ab amet enim et illo voluptatem.
        type: string
      error:
        description: Error message in case the backup was not successful
        example: In autem quaerat.
        type: string
      finishDate:
        description: The date when the backup was finished
        example: 4.002727e+18
        format: int64
        type: integer
      id:
        description: Backup Id
        example: Amet laborum enim.
        type: string
      metadataOnly:
        description: Indicated whether the backup was created only for the metadata
        example: false
        type: boolean
      namespace:
        description: Namespace
        example: Quia sint est praesentium soluta.
        type: string
      progress:
        description: Backup's progress in percent
        example: 4.0863476e+18
        format: int64
        type: integer
      scanPriority:
        description: Prioity of the scan reading the data for the backup
        example: 1.996247e+17
        format: int64
        type: integer
      sets:
        description: Sets from which backup was created
        example: Vel quam.
        type: string
      status:
        description: Backup's status
        example: Ut laborum cupiditate modi dolorum hic.
        type: string
      terminateOnClusterChange:
        description: Indicates whether the backup was supposed to be terminated in
          case the cluster experienced a change in its nodes
        example: true
        type: boolean
    required:
    - id
    - clusterId
    - namespace
    - destinationAddress
    - destinationPath
    - metadataOnly
    - terminateOnClusterChange
    - scanPriority
    - createDate
    - status
    - progress
    title: 'Mediatype identifier: application/vnd.aerospike.amc.backup.response+json;
      view=default'
    type: object
  AerospikeAmcClusterResourceUsageResponse:
    description: Cluster Resource Usage (default view)
    example:
      free-bytes: 3.9610717e+18
      nodeDetails:
        Fugit dolore magni ducimus.:
          free-bytes: 5.876103e+18
          total-bytes: 5.824241e+18
          used-bytes: 2.5501883e+18
      total-bytes: 1.436088e+18
      used-bytes: 1.3530942e+18
    properties:
      free-bytes:
        description: Free Bytes
        example: 3.9610717e+18
        format: int64
        type: integer
      nodeDetails:
        additionalProperties: true
        description: Resource usage details.
        example:
          Fugit dolore magni ducimus.:
            free-bytes: 5.876103e+18
            total-bytes: 5.824241e+18
            used-bytes: 2.5501883e+18
        type: object
      total-bytes:
        description: Total Bytes
        example: 1.436088e+18
        format: int64
        type: integer
      used-bytes:
        description: Used Bytes
        example: 1.3530942e+18
        format: int64
        type: integer
    required:
    - used-bytes
    - free-bytes
    - total-bytes
    title: 'Mediatype identifier: application/vnd.aerospike.amc.cluster.resource.usage.response+json;
      view=default'
    type: object
  AerospikeAmcClusterRoleResponse:
    description: Database User (default view)
    example:
      name: ada
      roles:
      - namespace: test
        privilege: read|read-write|read-write-udf|sys-admin|user-admin|data-admin
        set: test
    properties:
      name:
        description: User Id
        example: ada
        type: string
      roles:
        description: Database Roles
        example:
        - namespace: test
          privilege: read|read-write|read-write-udf|sys-admin|user-admin|data-admin
          set: test
        items:
          $ref: '#/definitions/Privilege'
        type: array
    required:
    - name
    - roles
    title: 'Mediatype identifier: application/vnd.aerospike.amc.cluster.role.response+json;
      view=default'
    type: object
  AerospikeAmcClusterUserResponse:
    description: Database User (default view)
    example:
      roles:
      - ops
      - dev
      username: ada
    properties:
      roles:
        description: Database User Roles
        example:
        - ops
        - dev
        items:
          example: Eaque fugit officia quo ipsam excepturi dignissimos.
          type: string
        type: array
      username:
        description: User Id
        example: ada
        type: string
    required:
    - username
    - roles
    title: 'Mediatype identifier: application/vnd.aerospike.amc.cluster.user.response+json;
      view=default'
    type: object
  AerospikeAmcConnectionModulesResponseFull:
    description: Cluster Modules (full view)
    example:
      name: Occaecati sunt ullam.
      source: Nihil iste deserunt ut.
      type: Nostrum natus voluptatem ea rem quia ducimus.
    properties:
      name:
        description: Module's Name
        example: Occaecati sunt ullam.
        type: string
      source:
        description: Module's Source Code
        example: Nihil iste deserunt ut.
        type: string
      type:
        description: Module's Source Type
        example: Nostrum natus voluptatem ea rem quia ducimus.
        type: string
    title: 'Mediatype identifier: application/vnd.aerospike.amc.connection.modules.response+json;
      view=full'
    type: object
  AerospikeAmcConnectionResponse:
    description: User Connection (default view)
    example:
      activeRedAlertCount: 3.3749265e+18
      clusterBuilds:
        latestVersion: Laboriosam doloribus ut.
        versionList:
          In omnis occaecati exercitationem est quis ratione.:
          - Eum autem quia.
      connectOnLogin: false
      connected: true
      disk:
        free-bytes: 3.9610717e+18
        nodeDetails:
          Fugit dolore magni ducimus.:
            free-bytes: 5.876103e+18
            total-bytes: 5.824241e+18
            used-bytes: 2.5501883e+18
        total-bytes: 1.436088e+18
        used-bytes: 1.3530942e+18
      id: 70f01ba5-b14f-47d9-8d69-c5b4e960d88b
      memory:
        free-bytes: 3.9610717e+18
        nodeDetails:
          Fugit dolore magni ducimus.:
            free-bytes: 5.876103e+18
            total-bytes: 5.824241e+18
            used-bytes: 2.5501883e+18
        total-bytes: 1.436088e+18
        used-bytes: 1.3530942e+18
      name: Payments Cluster
      namespaces:
      - Laboriosam cum quam.
      nodes:
      - Explicabo iure ut consectetur odit laborum aliquid.
      - Explicabo iure ut consectetur odit laborum aliquid.
      - Explicabo iure ut consectetur odit laborum aliquid.
      nodesCompatibility: Inventore alias ipsam omnis magnam tempora.
      offNodes:
      - Tempora consequatur.
      - Tempora consequatur.
      seeds:
      - host: 127.0.0.1
        port: 3000
        tlsName: ""
      - host: 127.0.0.1
        port: 3000
        tlsName: ""
      status: Nesciunt veritatis sunt et.
      updateInterval: 2.1256964e+18
      users:
      - Consequuntur saepe ut deserunt impedit.
      - Consequuntur saepe ut deserunt impedit.
      - Consequuntur saepe ut deserunt impedit.
    properties:
      activeRedAlertCount:
        description: Ative red alert count.
        example: 3.3749265e+18
        format: int64
        type: integer
      clusterBuilds:
        $ref: '#/definitions/AerospikeAmcVersionInfoResponse'
      connectOnLogin:
        description: UI should connect to this connection automatically after AMC
          login
        example: false
        type: boolean
      connected:
        description: If AMC is already connected to this cluster for the current user.
        example: true
        type: boolean
      disk:
        $ref: '#/definitions/AerospikeAmcClusterResourceUsageResponse'
      id:
        description: Connection Id
        example: 70f01ba5-b14f-47d9-8d69-c5b4e960d88b
        pattern: '[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}'
        type: string
      memory:
        $ref: '#/definitions/AerospikeAmcClusterResourceUsageResponse'
      name:
        description: Connection Name
        example: Payments Cluster
        type: string
      namespaces:
        description: List of namespaces.
        example:
        - Laboriosam cum quam.
        items:
          example: Laboriosam cum quam.
          type: string
        type: array
      nodes:
        description: List of cluster nodes which have been discovered.
        example:
        - Explicabo iure ut consectetur odit laborum aliquid.
        - Explicabo iure ut consectetur odit laborum aliquid.
        - Explicabo iure ut consectetur odit laborum aliquid.
        items:
          example: Explicabo iure ut consectetur odit laborum aliquid.
          type: string
        type: array
      nodesCompatibility:
        description: 'If nodes are all from the same version: Values: homogenious/compatible'
        example: Inventore alias ipsam omnis magnam tempora.
        type: string
      offNodes:
        description: Inactive/Lost/Inaccessible nodes.
        example:
        - Tempora consequatur.
        - Tempora consequatur.
        items:
          example: Tempora consequatur.
          type: string
        type: array
      seeds:
        description: Seeds
        example:
        - host: 127.0.0.1
          port: 3000
          tlsName: ""
        - host: 127.0.0.1
          port: 3000
          tlsName: ""
        items:
          $ref: '#/definitions/NodeSeed'
        type: array
      status:
        description: 'If cluster is connected: Values: on/off'
        example: Nesciunt veritatis sunt et.
        type: string
      updateInterval:
        description: Interval with which AMC fetches data from the database.
        example: 2.1256964e+18
        format: int64
        type: integer
      users:
        description: Cluster users list.
        example:
        - Consequuntur saepe ut deserunt impedit.
        - Consequuntur saepe ut deserunt impedit.
        - Consequuntur saepe ut deserunt impedit.
        items:
          example: Consequuntur saepe ut deserunt impedit.
          type: string
        type: array
    required:
    - name
    - connectOnLogin
    - connected
    - clusterBuilds
    - activeRedAlertCount
    - offNodes
    - nodesCompatibility
    - status
    - namespaces
    - nodes
    - memory
    - updateInterval
    title: 'Mediatype identifier: application/vnd.aerospike.amc.connection.response+json;
      view=default'
    type: object
  AerospikeAmcConnectionTreeResponse:
    description: User Connection Entity Tree (default view)
    example:
      entityType: Et non cupiditate a dignissimos in hic.
      id: 70f01ba5-b14f-47d9-8d69-c5b4e960d88b
      indexes:
      - binName: id
        entityType: Perspiciatis ab et.
        lastUpdate: 7.0358086e+17
        name: idx_test_customers_id
        type: NUMERIC
      lastUpdate: 2.4244165e+18
      modules:
      - entityType: Est laudantium.
        hash: 06508300d1dc7e308ce8998bb4fe7a12505aa1f9
        lastUpdate: 1.4112494e+18
        name: map_reduce.lua
        type: lua
      nodes:
      - entityType: Praesentium tenetur modi facilis.
        host: 127.0.0.1:3000
        id: BB9EB6C71290C00
        lastUpdate: 1.5079996e+18
        namespaces:
        - entityType: Autem aut vitae quam et dignissimos et.
          lastUpdate: 5.6132345e+18
          name: Test
          sets:
          - entityType: Aut deserunt nulla saepe rerum harum.
            lastUpdate: 2.3484733e+18
            name: Customers
        - entityType: Autem aut vitae quam et dignissimos et.
          lastUpdate: 5.6132345e+18
          name: Test
          sets:
          - entityType: Aut deserunt nulla saepe rerum harum.
            lastUpdate: 2.3484733e+18
            name: Customers
        - entityType: Autem aut vitae quam et dignissimos et.
          lastUpdate: 5.6132345e+18
          name: Test
          sets:
          - entityType: Aut deserunt nulla saepe rerum harum.
            lastUpdate: 2.3484733e+18
            name: Customers
      - entityType: Praesentium tenetur modi facilis.
        host: 127.0.0.1:3000
        id: BB9EB6C71290C00
        lastUpdate: 1.5079996e+18
        namespaces:
        - entityType: Autem aut vitae quam et dignissimos et.
          lastUpdate: 5.6132345e+18
          name: Test
          sets:
          - entityType: Aut deserunt nulla saepe rerum harum.
            lastUpdate: 2.3484733e+18
            name: Customers
        - entityType: Autem aut vitae quam et dignissimos et.
          lastUpdate: 5.6132345e+18
          name: Test
          sets:
          - entityType: Aut deserunt nulla saepe rerum harum.
            lastUpdate: 2.3484733e+18
            name: Customers
        - entityType: Autem aut vitae quam et dignissimos et.
          lastUpdate: 5.6132345e+18
          name: Test
          sets:
          - entityType: Aut deserunt nulla saepe rerum harum.
            lastUpdate: 2.3484733e+18
            name: Customers
      status: Est sit iusto.
    properties:
      entityType:
        description: Entity Type
        example: Et non cupiditate a dignissimos in hic.
        type: string
      id:
        description: Connection Id
        example: 70f01ba5-b14f-47d9-8d69-c5b4e960d88b
        pattern: '[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}'
        type: string
      indexes:
        description: Indexes
        example:
        - binName: id
          entityType: Perspiciatis ab et.
          lastUpdate: 7.0358086e+17
          name: idx_test_customers_id
          type: NUMERIC
        items:
          $ref: '#/definitions/AerospikeAmcEntityIndexResponse'
        type: array
      lastUpdate:
        description: Last Update Of This Entity in Unix Seconds
        example: 2.4244165e+18
        format: int64
        type: integer
      modules:
        description: modules
        example:
        - entityType: Est laudantium.
          hash: 06508300d1dc7e308ce8998bb4fe7a12505aa1f9
          lastUpdate: 1.4112494e+18
          name: map_reduce.lua
          type: lua
        items:
          $ref: '#/definitions/AerospikeAmcEntityModuleResponse'
        type: array
      nodes:
        description: Nodes
        example:
        - entityType: Praesentium tenetur modi facilis.
          host: 127.0.0.1:3000
          id: BB9EB6C71290C00
          lastUpdate: 1.5079996e+18
          namespaces:
          - entityType: Autem aut vitae quam et dignissimos et.
            lastUpdate: 5.6132345e+18
            name: Test
            sets:
            - entityType: Aut deserunt nulla saepe rerum harum.
              lastUpdate: 2.3484733e+18
              name: Customers
          - entityType: Autem aut vitae quam et dignissimos et.
            lastUpdate: 5.6132345e+18
            name: Test
            sets:
            - entityType: Aut deserunt nulla saepe rerum harum.
              lastUpdate: 2.3484733e+18
              name: Customers
          - entityType: Autem aut vitae quam et dignissimos et.
            lastUpdate: 5.6132345e+18
            name: Test
            sets:
            - entityType: Aut deserunt nulla saepe rerum harum.
              lastUpdate: 2.3484733e+18
              name: Customers
        - entityType: Praesentium tenetur modi facilis.
          host: 127.0.0.1:3000
          id: BB9EB6C71290C00
          lastUpdate: 1.5079996e+18
          namespaces:
          - entityType: Autem aut vitae quam et dignissimos et.
            lastUpdate: 5.6132345e+18
            name: Test
            sets:
            - entityType: Aut deserunt nulla saepe rerum harum.
              lastUpdate: 2.3484733e+18
              name: Customers
          - entityType: Autem aut vitae quam et dignissimos et.
            lastUpdate: 5.6132345e+18
            name: Test
            sets:
            - entityType: Aut deserunt nulla saepe rerum harum.
              lastUpdate: 2.3484733e+18
              name: Customers
          - entityType: Autem aut vitae quam et dignissimos et.
            lastUpdate: 5.6132345e+18
            name: Test
            sets:
            - entityType: Aut deserunt nulla saepe rerum harum.
              lastUpdate: 2.3484733e+18
              name: Customers
        items:
          $ref: '#/definitions/AerospikeAmcEntityNodeResponse'
        type: array
      status:
        description: Cureent connection status.
        example: Est sit iusto.
        type: string
    required:
    - id
    - entityType
    - lastUpdate
    - status
    title: 'Mediatype identifier: application/vnd.aerospike.amc.connection.tree.response+json;
      view=default'
    type: object
  AerospikeAmcEntityIndexResponse:
    description: Index Entity (default view)
    example:
      binName: id
      entityType: Perspiciatis ab et.
      lastUpdate: 7.0358086e+17
      name: idx_test_customers_id
      type: NUMERIC
    properties:
      binName:
        description: Bin Name
        example: id
        type: string
      entityType:
        description: Type
        example: Perspiciatis ab et.
        type: string
      lastUpdate:
        description: Last Update Of This Entity in Unix Seconds
        example: 7.0358086e+17
        format: int64
        type: integer
      name:
        description: Set Name
        example: idx_test_customers_id
        type: string
      type:
        description: Index Type
        example: NUMERIC
        type: string
    required:
    - name
    - binName
    - type
    - entityType
    - lastUpdate
    title: 'Mediatype identifier: application/vnd.aerospike.amc.entity.index.response+json;
      view=default'
    type: object
  AerospikeAmcEntityModuleResponse:
    description: Module Entity (default view)
    example:
      entityType: Est laudantium.
      hash: 06508300d1dc7e308ce8998bb4fe7a12505aa1f9
      lastUpdate: 1.4112494e+18
      name: map_reduce.lua
      type: lua
    properties:
      entityType:
        description: Type
        example: Est laudantium.
        type: string
      hash:
        description: Module Hash
        example: 06508300d1dc7e308ce8998bb4fe7a12505aa1f9
        type: string
      lastUpdate:
        description: Last Update Of This Entity in Unix Seconds
        example: 1.4112494e+18
        format: int64
        type: integer
      name:
        description: Module Name
        example: map_reduce.lua
        type: string
      type:
        description: Module Type
        example: lua
        type: string
    required:
    - name
    - hash
    - type
    - entityType
    - lastUpdate
    title: 'Mediatype identifier: application/vnd.aerospike.amc.entity.module.response+json;
      view=default'
    type: object
  AerospikeAmcEntityNamespaceResponse:
    description: Namespace Entity (default view)
    example:
      entityType: Autem aut vitae quam et dignissimos et.
      lastUpdate: 5.6132345e+18
      name: Test
      sets:
      - entityType: Aut deserunt nulla saepe rerum harum.
        lastUpdate: 2.3484733e+18
        name: Customers
    properties:
      entityType:
        description: Type
        example: Autem aut vitae quam et dignissimos et.
        type: string
      lastUpdate:
        description: Last Update Of This Entity in Unix Seconds
        example: 5.6132345e+18
        format: int64
        type: integer
      name:
        description: Namespace Name
        example: Test
        type: string
      sets:
        description: Namespaces
        example:
        - entityType: Aut deserunt nulla saepe rerum harum.
          lastUpdate: 2.3484733e+18
          name: Customers
        items:
          $ref: '#/definitions/AerospikeAmcEntitySetResponse'
        type: array
    required:
    - name
    - entityType
    - lastUpdate
    title: 'Mediatype identifier: application/vnd.aerospike.amc.entity.namespace.response+json;
      view=default'
    type: object
  AerospikeAmcEntityNodeResponse:
    description: Node Entity (default view)
    example:
      entityType: Praesentium tenetur modi facilis.
      host: 127.0.0.1:3000
      id: BB9EB6C71290C00
      lastUpdate: 1.5079996e+18
      namespaces:
      - entityType: Autem aut vitae quam et dignissimos et.
        lastUpdate: 5.6132345e+18
        name: Test
        sets:
        - entityType: Aut deserunt nulla saepe rerum harum.
          lastUpdate: 2.3484733e+18
          name: Customers
      - entityType: Autem aut vitae quam et dignissimos et.
        lastUpdate: 5.6132345e+18
        name: Test
        sets:
        - entityType: Aut deserunt nulla saepe rerum harum.
          lastUpdate: 2.3484733e+18
          name: Customers
      - entityType: Autem aut vitae quam et dignissimos et.
        lastUpdate: 5.6132345e+18
        name: Test
        sets:
        - entityType: Aut deserunt nulla saepe rerum harum.
          lastUpdate: 2.3484733e+18
          name: Customers
    properties:
      entityType:
        description: Type
        example: Praesentium tenetur modi facilis.
        type: string
      host:
        description: Network Host Address
        example: 127.0.0.1:3000
        type: string
      id:
        description: Node Id
        example: BB9EB6C71290C00
        type: string
      lastUpdate:
        description: Last Update Of This Entity in Unix Seconds
        example: 1.5079996e+18
        format: int64
        type: integer
      namespaces:
        description: Namespaces
        example:
        - entityType: Autem aut vitae quam et dignissimos et.
          lastUpdate: 5.6132345e+18
          name: Test
          sets:
          - entityType: Aut deserunt nulla saepe rerum harum.
            lastUpdate: 2.3484733e+18
            name: Customers
        - entityType: Autem aut vitae quam et dignissimos et.
          lastUpdate: 5.6132345e+18
          name: Test
          sets:
          - entityType: Aut deserunt nulla saepe rerum harum.
            lastUpdate: 2.3484733e+18
            name: Customers
        - entityType: Autem aut vitae quam et dignissimos et.
          lastUpdate: 5.6132345e+18
          name: Test
          sets:
          - entityType: Aut deserunt nulla saepe rerum harum.
            lastUpdate: 2.3484733e+18
            name: Customers
        items:
          $ref: '#/definitions/AerospikeAmcEntityNamespaceResponse'
        type: array
    required:
    - host
    - id
    - entityType
    - lastUpdate
    title: 'Mediatype identifier: application/vnd.aerospike.amc.entity.node.response+json;
      view=default'
    type: object
  AerospikeAmcEntitySetResponse:
    description: Set Entity (default view)
    example:
      entityType: Aut deserunt nulla saepe rerum harum.
      lastUpdate: 2.3484733e+18
      name: Customers
    properties:
      entityType:
        description: Type
        example: Aut deserunt nulla saepe rerum harum.
        type: string
      lastUpdate:
        description: Last Update Of This Entity in Unix Seconds
        example: 2.3484733e+18
        format: int64
        type: integer
      name:
        description: Set Name
        example: Customers
        type: string
    required:
    - name
    - entityType
    - lastUpdate
    title: 'Mediatype identifier: application/vnd.aerospike.amc.entity.set.response+json;
      view=default'
    type: object
  AerospikeAmcIndexWrapperResponse:
    description: AMC Index Response Wrapper (default view)
    example:
      indexes:
        Sequi ducimus et deleniti repellendus sed numquam.:
        - Stats:
            Quae et.: 7.410297e+18
          bin: Accusamus qui.
          binType: Inventore et ea molestiae.
          name: Aliquam consectetur ab omnis praesentium.
          namespace: Et neque et.
          set: Reprehenderit dolorem nobis pariatur ut earum.
          syncOnAllNodes: Tempora rerum quis.
        - Stats:
            Quae et.: 7.410297e+18
          bin: Accusamus qui.
          binType: Inventore et ea molestiae.
          name: Aliquam consectetur ab omnis praesentium.
          namespace: Et neque et.
          set: Reprehenderit dolorem nobis pariatur ut earum.
          syncOnAllNodes: Tempora rerum quis.
        - Stats:
            Quae et.: 7.410297e+18
          bin: Accusamus qui.
          binType: Inventore et ea molestiae.
          name: Aliquam consectetur ab omnis praesentium.
          namespace: Et neque et.
          set: Reprehenderit dolorem nobis pariatur ut earum.
          syncOnAllNodes: Tempora rerum quis.
      status: "on"
    properties:
      indexes:
        additionalProperties: true
        description: Index Data
        example:
          Sequi ducimus et deleniti repellendus sed numquam.:
          - Stats:
              Quae et.: 7.410297e+18
            bin: Accusamus qui.
            binType: Inventore et ea molestiae.
            name: Aliquam consectetur ab omnis praesentium.
            namespace: Et neque et.
            set: Reprehenderit dolorem nobis pariatur ut earum.
            syncOnAllNodes: Tempora rerum quis.
          - Stats:
              Quae et.: 7.410297e+18
            bin: Accusamus qui.
            binType: Inventore et ea molestiae.
            name: Aliquam consectetur ab omnis praesentium.
            namespace: Et neque et.
            set: Reprehenderit dolorem nobis pariatur ut earum.
            syncOnAllNodes: Tempora rerum quis.
          - Stats:
              Quae et.: 7.410297e+18
            bin: Accusamus qui.
            binType: Inventore et ea molestiae.
            name: Aliquam consectetur ab omnis praesentium.
            namespace: Et neque et.
            set: Reprehenderit dolorem nobis pariatur ut earum.
            syncOnAllNodes: Tempora rerum quis.
        type: object
      status:
        description: Cluster/Node Status
        example: "on"
        type: string
    required:
    - status
    - indexes
    title: 'Mediatype identifier: application/vnd.aerospike.amc.index.wrapper.response+json;
      view=default'
    type: object
  AerospikeAmcJobResponse:
    description: Job (default view)
    example:
      jobCount: 5.0500844e+18
      jobs:
      - Quo et cumque nihil dignissimos.: 1981-05-21T06:30:53+02:00
      limit: 9.1969255e+18
      offset: 5.648314e+18
    properties:
      jobCount:
        description: set name
        example: 5.0500844e+18
        format: int64
        type: integer
      jobs:
        description: namespace
        example:
        - Quo et cumque nihil dignissimos.: 1981-05-21T06:30:53+02:00
        items:
          additionalProperties: true
          example:
            Quo et cumque nihil dignissimos.: 1981-05-21T06:30:53+02:00
          type: object
        type: array
      limit:
        description: Transaction ID
        example: 9.1969255e+18
        format: int64
        type: integer
      offset:
        description: Module Name
        example: 5.648314e+18
        format: int64
        type: integer
    required:
    - offset
    - limit
    - jobs
    - jobCount
    title: 'Mediatype identifier: application/vnd.aerospike.amc.job.response+json;
      view=default'
    type: object
  AerospikeAmcNamespaceConfigResponse:
    description: Node Config (default view)
    example:
      address: Quis eum.
      config:
        Et voluptate et rerum molestiae enim.: 2009-04-10T17:23:54+02:00
      error: Modi repudiandae distinctio magnam accusantium voluptas et.
      namespace: Sit porro natus eveniet velit ducimus laboriosam.
      status: Quam dicta natus.
    properties:
      address:
        description: Node Address
        example: Quis eum.
        type: string
      config:
        additionalProperties: true
        description: Node config
        example:
          Et voluptate et rerum molestiae enim.: 2009-04-10T17:23:54+02:00
        type: object
      error:
        description: Error message
        example: Modi repudiandae distinctio magnam accusantium voluptas et.
        type: string
      namespace:
        description: Namespace Name
        example: Sit porro natus eveniet velit ducimus laboriosam.
        type: string
      status:
        description: Node status
        example: Quam dicta natus.
        type: string
    required:
    - address
    - namespace
    - status
    - config
    title: 'Mediatype identifier: application/vnd.aerospike.amc.namespace.config.response+json;
      view=default'
    type: object
  AerospikeAmcNamespaceResponse:
    description: Namespace End Point (default view)
    example:
      disk:
        free-bytes: 5.876103e+18
        total-bytes: 5.824241e+18
        used-bytes: 2.5501883e+18
      memory:
        free-bytes: 5.876103e+18
        total-bytes: 5.824241e+18
        used-bytes: 2.5501883e+18
      name: Et et odit doloremque et.
      stats:
        Dolorem sit quibusdam.: 1986-09-24T23:19:12+02:00
      status: Ipsum dolor ut exercitationem molestiae.
    properties:
      disk:
        $ref: '#/definitions/AerospikeAmcResourceUsageResponse'
      memory:
        $ref: '#/definitions/AerospikeAmcResourceUsageResponse'
      name:
        description: Namespace Name
        example: Et et odit doloremque et.
        type: string
      stats:
        additionalProperties: true
        description: Namespace statistics
        example:
          Dolorem sit quibusdam.: 1986-09-24T23:19:12+02:00
        type: object
      status:
        description: Cluster/Node status
        example: Ipsum dolor ut exercitationem molestiae.
        type: string
    required:
    - name
    - memory
    - disk
    - status
    - stats
    title: 'Mediatype identifier: application/vnd.aerospike.amc.namespace.response+json;
      view=default'
    type: object
  AerospikeAmcNodeConfigResponse:
    description: Node Config (default view)
    example:
      address: Inventore perferendis.
      config:
        Voluptatem iusto et aut.: 9.0669605e+17
      error: Qui quia repellat sint minima est numquam.
      status: Aut alias dolor quis id.
    properties:
      address:
        description: Node Address
        example: Inventore perferendis.
        type: string
      config:
        additionalProperties: true
        description: Node config
        example:
          Voluptatem iusto et aut.: 9.0669605e+17
        type: object
      error:
        description: Error message
        example: Qui quia repellat sint minima est numquam.
        type: string
      status:
        description: Node status
        example: Aut alias dolor quis id.
        type: string
    required:
    - address
    - status
    - config
    title: 'Mediatype identifier: application/vnd.aerospike.amc.node.config.response+json;
      view=default'
    type: object
  AerospikeAmcResourceUsageResponse:
    description: Resource Usage (default view)
    example:
      free-bytes: 5.876103e+18
      total-bytes: 5.824241e+18
      used-bytes: 2.5501883e+18
    properties:
      free-bytes:
        description: Free Bytes
        example: 5.876103e+18
        format: int64
        type: integer
      total-bytes:
        description: Total Bytes
        example: 5.824241e+18
        format: int64
        type: integer
      used-bytes:
        description: Used Bytes
        example: 2.5501883e+18
        format: int64
        type: integer
    required:
    - used-bytes
    - free-bytes
    - total-bytes
    title: 'Mediatype identifier: application/vnd.aerospike.amc.resource.usage.response+json;
      view=default'
    type: object
  AerospikeAmcRestoreResponse:
    description: Restore object (default view)
    example:
      IgnoreGenerationNumber: false
      MissingRecordsOnly: false
      SSHPassword: Ad distinctio praesentium distinctio aut fugiat.
      SSHUser: Deserunt dignissimos qui voluptatem.
      Threads: 4.9910264e+16
      clusterId: Voluptatem laudantium voluptatem quia dicta est.
      createDate: 6.363141e+18
      error: Quas voluptatibus repudiandae qui doloremque rem.
      finishDate: 8.526149e+18
      id: Est accusamus et nostrum delectus.
      namespace: Aliquid a qui odio consequuntur quo quia.
      progress: 6.433601e+18
      sourceAddress: Deserunt voluptatem modi vitae.
      sourcePath: Provident ea nulla aut corrupti facilis est.
      status: In debitis consequatur natus.
    properties:
      IgnoreGenerationNumber:
        description: Indicates whether the restore should only update records with
          smaller generation number
        example: false
        type: boolean
      MissingRecordsOnly:
        description: Indicates whether to restore records which do not exist on the
          cluster only
        example: false
        type: boolean
      SSHPassword:
        description: SSH user's password
        example: Ad distinctio praesentium distinctio aut fugiat.
        type: string
      SSHUser:
        description: SSH User
        example: Deserunt dignissimos qui voluptatem.
        type: string
      Threads:
        description: Number of working threads.
        example: 4.9910264e+16
        format: int64
        type: integer
      clusterId:
        description: Cluster Id
        example: Voluptatem laudantium voluptatem quia dicta est.
        type: string
      createDate:
        description: The date when the restore was created
        example: 6.363141e+18
        format: int64
        type: integer
      error:
        description: Error message in case the restore was not successful
        example: Quas voluptatibus repudiandae qui doloremque rem.
        type: string
      finishDate:
        description: The date when the restore was finished
        example: 8.526149e+18
        format: int64
        type: integer
      id:
        description: Restore Id
        example: Est accusamus et nostrum delectus.
        type: string
      namespace:
        description: Namespace
        example: Aliquid a qui odio consequuntur quo quia.
        type: string
      progress:
        description: Restore's progress in percent
        example: 6.433601e+18
        format: int64
        type: integer
      sourceAddress:
        description: Host on which the backup file is located
        example: Deserunt voluptatem modi vitae.
        type: string
      sourcePath:
        description: Host on which the backup file is located
        example: Provident ea nulla aut corrupti facilis est.
        type: string
      status:
        description: Restore's status
        example: In debitis consequatur natus.
        type: string
    required:
    - id
    - clusterId
    - namespace
    - sourceAddress
    - sourcePath
    - Threads
    - SSHUser
    - SSHPassword
    - MissingRecordsOnly
    - IgnoreGenerationNumber
    - createDate
    - status
    - progress
    title: 'Mediatype identifier: application/vnd.aerospike.amc.restore.response+json;
      view=default'
    type: object
  AerospikeAmcSetResponse:
    description: Set object (default view)
    example:
      set:
        Ut ut consectetur et non voluptatum.: 0.33215013
      status: Alias et beatae.
    properties:
      set:
        additionalProperties: true
        description: Set's Attributes
        example:
          Ut ut consectetur et non voluptatum.: 0.33215013
        type: object
      status:
        description: Node's Status
        example: Alias et beatae.
        type: string
    required:
    - status
    - set
    title: 'Mediatype identifier: application/vnd.aerospike.amc.set.response+json;
      view=default'
    type: object
  AerospikeAmcSystemResponse:
    description: AMC Server System information (default view)
    example:
      version: "5.0"
    properties:
      version:
        description: AMC Version
        example: "5.0"
        type: string
    title: 'Mediatype identifier: application/vnd.aerospike.amc.system.response+json;
      view=default'
    type: object
  AerospikeAmcThroughputWrapperResponse:
    description: AMC Throughput Response Wrapper (default view)
    example:
      status: "on"
      throughput:
        Qui totam dolorem molestiae est facilis eum.:
          Voluptatem ea maiores doloribus.:
          - failed: 0.95945877
            successful: 0.5195043
            timestamp: 5.1813e+18
          - failed: 0.95945877
            successful: 0.5195043
            timestamp: 5.1813e+18
          - failed: 0.95945877
            successful: 0.5195043
            timestamp: 5.1813e+18
    properties:
      status:
        description: Cluster/Node Status
        example: "on"
        type: string
      throughput:
        additionalProperties: true
        description: Throughput Data
        example:
          Qui totam dolorem molestiae est facilis eum.:
            Voluptatem ea maiores doloribus.:
            - failed: 0.95945877
              successful: 0.5195043
              timestamp: 5.1813e+18
            - failed: 0.95945877
              successful: 0.5195043
              timestamp: 5.1813e+18
            - failed: 0.95945877
              successful: 0.5195043
              timestamp: 5.1813e+18
        type: object
    required:
    - status
    - throughput
    title: 'Mediatype identifier: application/vnd.aerospike.amc.throughput.wrapper.response+json;
      view=default'
    type: object
  AerospikeAmcUserQueryResponse:
    description: User (default view)
    example:
      active: true
      fullName: Ada Lovelace
      notes: A Genius
      roles:
      - ops
      - dev
      username: ada
    properties:
      active:
        description: User account is active
        example: true
        type: boolean
      fullName:
        description: User's fullname
        example: Ada Lovelace
        type: string
      notes:
        description: Additional Notes
        example: A Genius
        type: string
      roles:
        description: AMC User Roles
        example:
        - ops
        - dev
        items:
          example: Hic aspernatur.
          type: string
        type: array
      username:
        description: User Id
        example: ada
        type: string
    required:
    - username
    title: 'Mediatype identifier: application/vnd.aerospike.amc.user.query.response+json;
      view=default'
    type: object
  AerospikeAmcVersionInfoResponse:
    description: Resource Usage (default view)
    example:
      latestVersion: Laboriosam doloribus ut.
      versionList:
        In omnis occaecati exercitationem est quis ratione.:
        - Eum autem quia.
    properties:
      latestVersion:
        description: Latest server version used in the cluster
        example: Laboriosam doloribus ut.
        type: string
      versionList:
        additionalProperties: true
        description: Map of server versions to nodes
        example:
          In omnis occaecati exercitationem est quis ratione.:
          - Eum autem quia.
        type: object
    required:
    - versionList
    - latestVersion
    title: 'Mediatype identifier: application/vnd.aerospike.amc.version.info.response+json;
      view=default'
    type: object
  AuthenticateAuthPayload:
    example:
      password: password
      user: username
    properties:
      password:
        description: AMC User's Password
        example: password
        type: string
      user:
        description: AMC User Name (this is not the same as Database user name)
        example: username
        type: string
    required:
    - user
    - password
    title: AuthenticateAuthPayload
    type: object
  ConnectConnectionPayload:
    example:
      password: "123456"
      username: admin
    properties:
      password:
        description: Database User's Password
        example: "123456"
        type: string
      username:
        description: Database Username
        example: admin
        type: string
    required:
    - username
    - password
    title: ConnectConnectionPayload
    type: object
  CreateBackupPayload:
    example:
      SSHPassword: pass
      SSHUser: user
      destinationAddress: 127.0.0.1
      destinationPath: /tmp
      metadataOnly: false
      namespace: test
      scanPriority: 0
      sets: test,bar
      terminateOnClusterChange: false
    properties:
      SSHPassword:
        description: SSH user's password
        example: pass
        type: string
      SSHUser:
        description: SSH User
        example: user
        type: string
      destinationAddress:
        description: Host on which the backup was created
        example: 127.0.0.1
        type: string
      destinationPath:
        description: Directory where the backup was created
        example: /tmp
        type: string
      metadataOnly:
        description: Indicated whether the backup was created only for the metadata
        example: false
        type: boolean
      namespace:
        description: Namespace
        example: test
        type: string
      scanPriority:
        description: Prioity of the scan reading the data for the backup. 0 (auto),
          1 (low), 2 (medium), 3 (high).
        example: 0
        format: int64
        type: integer
      sets:
        description: Sets from which backup was created
        example: test,bar
        type: string
      terminateOnClusterChange:
        description: Indicates whether the backup was supposed to be terminated in
          case the cluster experienced a change in its nodes
        example: false
        type: boolean
    required:
    - namespace
    - destinationAddress
    - destinationPath
    - sets
    - metadataOnly
    - terminateOnClusterChange
    - scanPriority
    - SSHUser
    - SSHPassword
    title: CreateBackupPayload
    type: object
  CreateDbRolePayload:
    example:
      name: report
      privileges:
      - namespace: test
        privilege: read|read-write|read-write-udf|sys-admin|user-admin|data-admin
        set: test
    properties:
      name:
        description: Role name
        example: report
        type: string
      privileges:
        description: Valid database privileges
        example:
        - namespace: test
          privilege: read|read-write|read-write-udf|sys-admin|user-admin|data-admin
          set: test
        items:
          $ref: '#/definitions/Privilege'
        type: array
    required:
    - name
    - privileges
    title: CreateDbRolePayload
    type: object
  CreateDbUserPayload:
    example:
      password: password
      roles:
      - Aut temporibus.
      - Aut temporibus.
      username: ada
    properties:
      password:
        description: Password. If Password is not provided, the user will be updated.
        example: password
        type: string
      roles:
        description: Database User Roles to be granted to the User
        example:
        - Aut temporibus.
        - Aut temporibus.
        items:
          example: Aut temporibus.
          type: string
        type: array
      username:
        description: Database User Id
        example: ada
        type: string
    required:
    - username
    - password
    - roles
    title: CreateDbUserPayload
    type: object
  CreateRestorePayload:
    example:
      IgnoreGenerationNumber: false
      MissingRecordsOnly: false
      SSHPassword: pass
      SSHUser: user
      Threads: 0
      namespace: test
      sourceAddress: 127.0.0.1
      sourcePath: /tmp
    properties:
      IgnoreGenerationNumber:
        description: Indicates whether the restore should only update records with
          smaller generation number
        example: false
        type: boolean
      MissingRecordsOnly:
        description: Indicates whether to restore records which do not exist on the
          cluster only
        example: false
        type: boolean
      SSHPassword:
        description: SSH user's password
        example: pass
        type: string
      SSHUser:
        description: SSH User
        example: user
        type: string
      Threads:
        description: Number of working threads.
        example: 0
        format: int64
        type: integer
      namespace:
        description: Namespace
        example: test
        type: string
      sourceAddress:
        description: Host on which the backup file is located
        example: 127.0.0.1
        type: string
      sourcePath:
        description: Host on which the backup file is located
        example: /tmp
        type: string
    required:
    - namespace
    - sourceAddress
    - sourcePath
    - Threads
    - SSHUser
    - SSHPassword
    - MissingRecordsOnly
    - IgnoreGenerationNumber
    title: CreateRestorePayload
    type: object
  DropIndexPayload:
    example:
      namespace: test
      setName: test
    properties:
      namespace:
        description: Index's Namespace
        example: test
        type: string
      setName:
        description: Index's Set Name
        example: test
        type: string
    required:
    - namespace
    - setName
    title: DropIndexPayload
    type: object
  NodeSeed:
    example:
      host: 127.0.0.1
      port: 3000
      tlsName: ""
    properties:
      host:
        description: Node Host. Valid DNS, IPv4 or IPv6 value
        example: 127.0.0.1
        type: string
      port:
        description: Node's port
        example: 3000
        maximum: 65535
        minimum: 0
        type: integer
      tlsName:
        description: Node's TLS name
        example: ""
        type: string
    required:
    - host
    - port
    title: NodeSeed
    type: object
  Privilege:
    example:
      namespace: test
      privilege: read|read-write|read-write-udf|sys-admin|user-admin|data-admin
      set: test
    properties:
      namespace:
        description: Namespace
        example: test
        type: string
      privilege:
        description: Database Privileges
        example: read|read-write|read-write-udf|sys-admin|user-admin|data-admin
        type: string
      set:
        description: Set
        example: test
        type: string
    required:
    - privilege
    title: Privilege
    type: object
  SaveConnectionPayload:
    example:
      connId: 70f01ba5-b14f-47d9-8d69-c5b4e960d88b
      connectOnLogin: false
      name: Payments Cluster
      seeds:
      - host: 127.0.0.1
        port: 3000
        tlsName: ""
      - host: 127.0.0.1
        port: 3000
        tlsName: ""
      - host: 127.0.0.1
        port: 3000
        tlsName: ""
    properties:
      connId:
        description: Connection Id
        example: 70f01ba5-b14f-47d9-8d69-c5b4e960d88b
        pattern: '[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}'
        type: string
      connectOnLogin:
        description: Should AMC connect to this cluster automatically after user login?
        example: false
        type: boolean
      name:
        description: Connection Name
        example: Payments Cluster
        type: string
      seeds:
        description: Seeds
        example:
        - host: 127.0.0.1
          port: 3000
          tlsName: ""
        - host: 127.0.0.1
          port: 3000
          tlsName: ""
        - host: 127.0.0.1
          port: 3000
          tlsName: ""
        items:
          $ref: '#/definitions/NodeSeed'
        type: array
    required:
    - name
    - seeds
    title: SaveConnectionPayload
    type: object
  SaveIndexPayload:
    example:
      binName: Voluptates et veniam aut libero aut.
      indexName: idxAccounts
      namespace: Quaerat qui vitae qui tenetur quis ea.
      setName: Ab aliquid iure.
      type: NUMERIC
    properties:
      binName:
        description: Index's Bin name
        example: Voluptates et veniam aut libero aut.
        type: string
      indexName:
        description: Index's Name
        example: idxAccounts
        type: string
      namespace:
        description: Index's Namespace
        example: Quaerat qui vitae qui tenetur quis ea.
        type: string
      setName:
        description: Index's Set name
        example: Ab aliquid iure.
        type: string
      type:
        description: Index's type
        example: NUMERIC
        pattern: (?i)[NUMERIC|STRING]
        type: string
    required:
    - indexName
    - namespace
    - setName
    - binName
    - type
    title: SaveIndexPayload
    type: object
  SaveModulePayload:
    example:
      name: reports
      source: Voluptatem blanditiis reiciendis aut facilis nulla.
      type: LUA
    properties:
      name:
        description: Module's Name
        example: reports
        type: string
      source:
        description: Module's Source Code
        example: Voluptatem blanditiis reiciendis aut facilis nulla.
        type: string
      type:
        description: Module's type
        example: LUA
        pattern: (?i)LUA
        type: string
    required:
    - name
    - source
    - type
    title: SaveModulePayload
    type: object
  SaveUserPayload:
    example:
      active: true
      fullName: Ada Lovelace
      notes: A Genius
      password: password
      roles:
      - ops
      - dev
      username: ada
    properties:
      active:
        description: User account is active
        example: true
        type: boolean
      fullName:
        description: User's fullname
        example: Ada Lovelace
        type: string
      notes:
        description: Additional Notes
        example: A Genius
        type: string
      password:
        description: Password
        example: password
        type: string
      roles:
        description: 'Valid roles are: admin, ops, dev'
        example:
        - ops
        - dev
        items:
          example: Sed possimus aut error voluptatibus aut et.
          type: string
        type: array
      username:
        description: AMC User Id
        example: ada
        type: string
    required:
    - username
    - roles
    title: SaveUserPayload
    type: object
  SetConfigConnectionPayload:
    example:
      newConfig:
        some-config: some-value
    properties:
      newConfig:
        additionalProperties: true
        description: New config parameters
        example:
          some-config: some-value
        type: object
    required:
    - newConfig
    title: SetConfigConnectionPayload
    type: object
  SetConfigNamespacePayload:
    example:
      newConfig:
        some-config: some-value
    properties:
      newConfig:
        additionalProperties: true
        description: New config parameters
        example:
          some-config: some-value
        type: object
    required:
    - newConfig
    title: SetConfigNamespacePayload
    type: object
  SetConfigNodePayload:
    example:
      newConfig:
        some-config: some-value
    properties:
      newConfig:
        additionalProperties: true
        description: New config parameters
        example:
          some-config: some-value
        type: object
    required:
    - newConfig
    title: SetConfigNodePayload
    type: object
  UpdateDbRolePayload:
    example:
      grantPrivileges:
      - namespace: test
        privilege: read|read-write|read-write-udf|sys-admin|user-admin|data-admin
        set: test
      - namespace: test
        privilege: read|read-write|read-write-udf|sys-admin|user-admin|data-admin
        set: test
      name: report
      revokePrivileges:
      - namespace: test
        privilege: read|read-write|read-write-udf|sys-admin|user-admin|data-admin
        set: test
      - namespace: test
        privilege: read|read-write|read-write-udf|sys-admin|user-admin|data-admin
        set: test
    properties:
      grantPrivileges:
        description: DB Privileges to be granted
        example:
        - namespace: test
          privilege: read|read-write|read-write-udf|sys-admin|user-admin|data-admin
          set: test
        - namespace: test
          privilege: read|read-write|read-write-udf|sys-admin|user-admin|data-admin
          set: test
        items:
          $ref: '#/definitions/Privilege'
        type: array
      name:
        description: Role name
        example: report
        type: string
      revokePrivileges:
        description: DB Privileges to be revoked
        example:
        - namespace: test
          privilege: read|read-write|read-write-udf|sys-admin|user-admin|data-admin
          set: test
        - namespace: test
          privilege: read|read-write|read-write-udf|sys-admin|user-admin|data-admin
          set: test
        items:
          $ref: '#/definitions/Privilege'
        type: array
    required:
    - name
    title: UpdateDbRolePayload
    type: object
  UpdateDbUserPayload:
    example:
      grantRoles:
      - Animi incidunt ut voluptatem.
      password: password
      revokeRoles:
      - Explicabo dignissimos.
      username: ada
    properties:
      grantRoles:
        description: Database User Roles to be granted to the User
        example:
        - Animi incidunt ut voluptatem.
        items:
          example: Animi incidunt ut voluptatem.
          type: string
        type: array
      password:
        description: Password. If Password is not provided, the user will be updated.
        example: password
        type: string
      revokeRoles:
        description: Database User Roles to be revoked from the User
        example:
        - Explicabo dignissimos.
        items:
          example: Explicabo dignissimos.
          type: string
        type: array
      username:
        description: Database User Id
        example: ada
        type: string
    required:
    - username
    title: UpdateDbUserPayload
    type: object
  error:
    description: Error response media type (default view)
    example:
      code: invalid_value
      detail: Value of ID must be an integer
      id: 3F1FKVRR
      meta:
        timestamp: 1.458609e+09
      status: "400"
    properties:
      code:
        description: an application-specific error code, expressed as a string value.
        example: invalid_value
        type: string
      detail:
        description: a human-readable explanation specific to this occurrence of the
          problem.
        example: Value of ID must be an integer
        type: string
      id:
        description: a unique identifier for this particular occurrence of the problem.
        example: 3F1FKVRR
        type: string
      meta:
        additionalProperties: true
        description: a meta object containing non-standard meta-information about
          the error.
        example:
          timestamp: 1.458609e+09
        type: object
      status:
        description: the HTTP status code applicable to this problem, expressed as
          a string value.
        example: "400"
        type: string
    title: 'Mediatype identifier: application/vnd.goa.error; view=default'
    type: object
info:
  description: Aerospike Management Console is used to manage and monitor Aerospike
    Database Clusters.
  title: Aerospike Management Console
  version: ""
paths:
  /{filepath}:
    get:
      operationId: public#/*filepath
      parameters:
      - description: Relative file path
        in: path
        name: filepath
        required: true
        type: string
      responses:
        "200":
          description: File downloaded
          schema:
            type: file
        "404":
          description: File not found
          schema:
            $ref: '#/definitions/error'
      schemes:
      - http
      - https
      summary: Download static_v5/
  /api/v1/amc/system:
    get:
      description: Get AMC Server Version and Information
      operationId: amc#system
      produces:
      - application/vnd.aerospike.amc.system.response+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/AerospikeAmcSystemResponse'
        "500":
          description: Internal Server Error
      schemes:
      - http
      - https
      summary: system amc
      tags:
      - amc
  /api/v1/auth/authenticate:
    post:
      description: Authenticate a device
      operationId: auth#authenticate
      parameters:
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/AuthenticateAuthPayload'
      responses:
        "204":
          description: No Content
          headers:
            Authorization:
              description: Generated JWT
              type: string
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "500":
          description: Internal Server Error
      schemes:
      - http
      - https
      summary: authenticate auth
      tags:
      - auth
  /api/v1/connections:
    get:
      description: |-
        Get the list of user connections

        Required security scopes:
          * `api:general`
      operationId: connection#query
      produces:
      - text/plain
      responses:
        "200":
          description: OK
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      schemes:
      - http
      - https
      security:
      - jwt:
        - api:general
      summary: query connection
      tags:
      - connection
    post:
      description: |-
        Register or Update a new connection for user

        Required security scopes:
          * `api:general`
      operationId: connection#save
      parameters:
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/SaveConnectionPayload'
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      schemes:
      - http
      - https
      security:
      - jwt:
        - api:general
      summary: save connection
      tags:
      - connection
  /api/v1/connections/{connId}:
    delete:
      description: |-
        Delete a connection

        Required security scopes:
          * `api:general`
      operationId: connection#delete
      parameters:
      - description: Connection Id
        in: path
        name: connId
        pattern: '[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}'
        required: true
        type: string
      responses:
        "204":
          description: No Content
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      schemes:
      - http
      - https
      security:
      - jwt:
        - api:general
      summary: delete connection
      tags:
      - connection
    get:
      description: |-
        Get the user connection

        Required security scopes:
          * `api:general`
      operationId: connection#show
      parameters:
      - description: Connection Id
        in: path
        name: connId
        pattern: '[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}'
        required: true
        type: string
      produces:
      - application/vnd.aerospike.amc.connection.response+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/AerospikeAmcConnectionResponse'
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      schemes:
      - http
      - https
      security:
      - jwt:
        - api:general
      summary: show connection
      tags:
      - connection
    post:
      description: |-
        Connect to the cluster and return the entity tree

        Required security scopes:
          * `api:general`
      operationId: connection#connect
      parameters:
      - description: Connection Id
        in: path
        name: connId
        pattern: '[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}'
        required: true
        type: string
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/ConnectConnectionPayload'
      produces:
      - application/vnd.aerospike.amc.connection.tree.response+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/AerospikeAmcConnectionTreeResponse'
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "500":
          description: Internal Server Error
      schemes:
      - http
      - https
      security:
      - jwt:
        - api:general
      summary: connect connection
      tags:
      - connection
  /api/v1/connections/{connId}/add-node:
    post:
      description: |-
        Add a node to the cluster

        Required security scopes:
          * `api:enterprise`
      operationId: connection#add-node
      parameters:
      - description: Connection Id
        in: path
        name: connId
        pattern: '[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}'
        required: true
        type: string
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/AddNodeConnectionPayload'
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      schemes:
      - http
      - https
      security:
      - jwt:
        - api:enterprise
      summary: add-node connection
      tags:
      - connection
  /api/v1/connections/{connId}/backups:
    get:
      description: |-
        Get a cluster's backups

        Required security scopes:
          * `api:enterprise`
      operationId: backup#query
      parameters:
      - description: Connection Id
        in: path
        name: connId
        pattern: '[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}'
        required: true
        type: string
      produces:
      - text/plain
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      schemes:
      - http
      - https
      security:
      - jwt:
        - api:enterprise
      summary: query backup
      tags:
      - backup
    post:
      description: |-
        Create a backup for the cluster

        Required security scopes:
          * `api:enterprise`
      operationId: backup#create
      parameters:
      - description: Connection Id
        in: path
        name: connId
        pattern: '[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}'
        required: true
        type: string
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/CreateBackupPayload'
      produces:
      - application/vnd.aerospike.amc.backup.response+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/AerospikeAmcBackupResponse'
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      schemes:
      - http
      - https
      security:
      - jwt:
        - api:enterprise
      summary: create backup
      tags:
      - backup
  /api/v1/connections/{connId}/backups/{backupId}:
    get:
      description: |-
        Get a backup

        Required security scopes:
          * `api:enterprise`
      operationId: backup#show
      parameters:
      - description: Backup Id
        in: path
        name: backupId
        pattern: '[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}'
        required: true
        type: string
      - description: Connection Id
        in: path
        name: connId
        pattern: '[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}'
        required: true
        type: string
      produces:
      - application/vnd.aerospike.amc.backup.response+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/AerospikeAmcBackupResponse'
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      schemes:
      - http
      - https
      security:
      - jwt:
        - api:enterprise
      summary: show backup
      tags:
      - backup
  /api/v1/connections/{connId}/backups/progress:
    get:
      description: |-
        Get current backup that is in-progress

        Required security scopes:
          * `api:enterprise`
      operationId: backup#progress
      parameters:
      - description: Connection Id
        in: path
        name: connId
        pattern: '[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}'
        required: true
        type: string
      produces:
      - application/vnd.aerospike.amc.backup.response+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/AerospikeAmcBackupResponse'
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      schemes:
      - http
      - https
      security:
      - jwt:
        - api:enterprise
      summary: progress backup
      tags:
      - backup
  /api/v1/connections/{connId}/config:
    get:
      description: |-
        Returns the config of all the nodes in the cluster.

        Required security scopes:
          * `api:enterprise`
      operationId: connection#config
      parameters:
      - description: Connection Id
        in: path
        name: connId
        pattern: '[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}'
        required: true
        type: string
      produces:
      - text/plain
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
        "501":
          description: Not Implemented
      schemes:
      - http
      - https
      security:
      - jwt:
        - api:enterprise
      summary: config connection
      tags:
      - connection
    post:
      description: |-
        Changes the config of the node.

        Required security scopes:
          * `api:enterprise`
      operationId: connection#set config
      parameters:
      - description: Connection Id
        in: path
        name: connId
        pattern: '[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}'
        required: true
        type: string
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/SetConfigConnectionPayload'
      produces:
      - text/plain
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "406":
          description: Not Acceptable
        "500":
          description: Internal Server Error
      schemes:
      - http
      - https
      security:
      - jwt:
        - api:enterprise
      summary: set config connection
      tags:
      - connection
  /api/v1/connections/{connId}/entity-tree:
    get:
      description: |-
        Return the cluster's entity tree

        Required security scopes:
          * `api:general`
      operationId: connection#entities
      parameters:
      - description: Connection Id
        in: path
        name: connId
        pattern: '[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}'
        required: true
        type: string
      produces:
      - application/vnd.aerospike.amc.connection.tree.response+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/AerospikeAmcConnectionTreeResponse'
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "500":
          description: Internal Server Error
      schemes:
      - http
      - https
      security:
      - jwt:
        - api:general
      summary: entities connection
      tags:
      - connection
  /api/v1/connections/{connId}/indexes:
    get:
      description: |-
        Query a cluster's indexes

        Required security scopes:
          * `api:general`
      operationId: index#query
      parameters:
      - description: Connection Id
        in: path
        name: connId
        pattern: '[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}'
        required: true
        type: string
      - description: Index stats should be included in the results
        in: query
        name: includeStats
        required: true
        type: boolean
      produces:
      - application/vnd.aerospike.amc.index.wrapper.response+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/AerospikeAmcIndexWrapperResponse'
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "500":
          description: Internal Server Error
      schemes:
      - http
      - https
      security:
      - jwt:
        - api:general
      summary: query index
      tags:
      - index
    post:
      description: |-
        Save an index in the cluster

        Required security scopes:
          * `api:general`
      operationId: index#save
      parameters:
      - description: Connection Id
        in: path
        name: connId
        pattern: '[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}'
        required: true
        type: string
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/SaveIndexPayload'
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "500":
          description: Internal Server Error
      schemes:
      - http
      - https
      security:
      - jwt:
        - api:general
      summary: save index
      tags:
      - index
  /api/v1/connections/{connId}/indexes/{name}:
    delete:
      description: |-
        Drop a index from the cluster

        Required security scopes:
          * `api:general`
      operationId: index#drop
      parameters:
      - description: Connection Id
        in: path
        name: connId
        pattern: '[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}'
        required: true
        type: string
      - description: Index's Name
        in: path
        name: name
        required: true
        type: string
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/DropIndexPayload'
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      schemes:
      - http
      - https
      security:
      - jwt:
        - api:general
      summary: drop index
      tags:
      - index
    get:
      description: |-
        Get a index

        Required security scopes:
          * `api:general`
      operationId: index#show
      parameters:
      - description: Connection Id
        in: path
        name: connId
        pattern: '[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}'
        required: true
        type: string
      - in: path
        name: name
        required: true
        type: string
      produces:
      - application/vnd.aerospike.amc.index.wrapper.response+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/AerospikeAmcIndexWrapperResponse'
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      schemes:
      - http
      - https
      security:
      - jwt:
        - api:general
      summary: show index
      tags:
      - index
  /api/v1/connections/{connId}/latency:
    get:
      description: |-
        Returns the aggregate latency of the cluster namespaces for a given window of time. If From/To are not specified, the latest throughput will be returned.

        Required security scopes:
          * `api:enterprise`
      operationId: connection#latency
      parameters:
      - description: Connection Id
        in: path
        name: connId
        pattern: '[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}'
        required: true
        type: string
      - description: From time in unix seconds
        in: query
        name: from
        required: false
        type: integer
      - description: Until time in unix seconds
        in: query
        name: until
        required: false
        type: integer
      produces:
      - text/plain
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      schemes:
      - http
      - https
      security:
      - jwt:
        - api:enterprise
      summary: latency connection
      tags:
      - connection
  /api/v1/connections/{connId}/modules:
    get:
      description: |-
        Query a cluster's modules

        Required security scopes:
          * `api:general`
      operationId: module#query
      parameters:
      - description: Connection Id
        in: path
        name: connId
        pattern: '[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}'
        required: true
        type: string
      produces:
      - text/plain
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "500":
          description: Internal Server Error
      schemes:
      - http
      - https
      security:
      - jwt:
        - api:general
      summary: query module
      tags:
      - module
    post:
      description: |-
        Save a module in the cluster

        Required security scopes:
          * `api:general`
      operationId: module#save
      parameters:
      - description: Connection Id
        in: path
        name: connId
        pattern: '[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}'
        required: true
        type: string
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/SaveModulePayload'
      produces:
      - application/vnd.aerospike.amc.connection.modules.response+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/AerospikeAmcConnectionModulesResponseFull'
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "500":
          description: Internal Server Error
      schemes:
      - http
      - https
      security:
      - jwt:
        - api:general
      summary: save module
      tags:
      - module
  /api/v1/connections/{connId}/modules/{name}:
    delete:
      description: |-
        Drop a module from the cluster

        Required security scopes:
          * `api:general`
      operationId: module#drop
      parameters:
      - description: Connection Id
        in: path
        name: connId
        pattern: '[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}'
        required: true
        type: string
      - description: Module's Name
        in: path
        name: name
        required: true
        type: string
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      schemes:
      - http
      - https
      security:
      - jwt:
        - api:general
      summary: drop module
      tags:
      - module
    get:
      description: |-
        Get a cluster's module

        Required security scopes:
          * `api:general`
      operationId: module#show
      parameters:
      - description: Connection Id
        in: path
        name: connId
        pattern: '[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}'
        required: true
        type: string
      - in: path
        name: name
        required: true
        type: string
      produces:
      - application/vnd.aerospike.amc.connection.modules.response+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/AerospikeAmcConnectionModulesResponseFull'
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      schemes:
      - http
      - https
      security:
      - jwt:
        - api:general
      summary: show module
      tags:
      - module
  /api/v1/connections/{connId}/namespaces:
    get:
      description: |-
        Query cluster's namespaces

        Required security scopes:
          * `api:general`
      operationId: connection#namespaces
      parameters:
      - description: Connection Id
        in: path
        name: connId
        pattern: '[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}'
        required: true
        type: string
      produces:
      - text/plain
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "500":
          description: Internal Server Error
      schemes:
      - http
      - https
      security:
      - jwt:
        - api:general
      summary: namespaces connection
      tags:
      - connection
  /api/v1/connections/{connId}/nodes/{node}:
    get:
      description: |-
        Get a cluster's nodes

        Required security scopes:
          * `api:general`
      operationId: node#show
      parameters:
      - description: Connection Id
        in: path
        name: connId
        pattern: '[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}'
        required: true
        type: string
      - description: Node Addresses
        in: path
        name: node
        required: true
        type: string
      produces:
      - text/plain
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      schemes:
      - http
      - https
      security:
      - jwt:
        - api:general
      summary: show node
      tags:
      - node
  /api/v1/connections/{connId}/nodes/{node}/config:
    get:
      description: |-
        Returns the config of the node.

        Required security scopes:
          * `api:enterprise`
      operationId: node#config
      parameters:
      - description: Connection Id
        in: path
        name: connId
        pattern: '[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}'
        required: true
        type: string
      - description: Node Address
        in: path
        name: node
        required: true
        type: string
      produces:
      - application/vnd.aerospike.amc.node.config.response+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/AerospikeAmcNodeConfigResponse'
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
        "501":
          description: Not Implemented
      schemes:
      - http
      - https
      security:
      - jwt:
        - api:enterprise
      summary: config node
      tags:
      - node
    post:
      description: |-
        Changes the config of the node.

        Required security scopes:
          * `api:enterprise`
      operationId: node#set config
      parameters:
      - description: Connection Id
        in: path
        name: connId
        pattern: '[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}'
        required: true
        type: string
      - description: Node Address
        in: path
        name: node
        required: true
        type: string
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/SetConfigNodePayload'
      produces:
      - application/vnd.aerospike.amc.node.config.response+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/AerospikeAmcNodeConfigResponse'
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "406":
          description: Not Acceptable
        "500":
          description: Internal Server Error
      schemes:
      - http
      - https
      security:
      - jwt:
        - api:enterprise
      summary: set config node
      tags:
      - node
  /api/v1/connections/{connId}/nodes/{node}/jobs:
    get:
      description: |-
        Returns the list of jobs for the node.

        Required security scopes:
          * `api:general`
      operationId: node#jobs
      parameters:
      - description: Connection Id
        in: path
        name: connId
        pattern: '[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}'
        required: true
        type: string
      - description: Number of jobs per page
        in: query
        name: limit
        required: false
        type: integer
      - description: Node Address
        in: path
        name: node
        required: true
        type: string
      - description: Page number of the job list
        in: query
        name: offset
        required: false
        type: integer
      - description: Field by which to sort the results
        in: query
        name: sortBy
        required: false
        type: string
      - description: Sort Order
        in: query
        name: sortOrder
        pattern: desc|asc
        required: false
        type: string
      - description: Status of the job
        in: query
        name: status
        pattern: in-progress|completed
        required: false
        type: string
      produces:
      - application/vnd.aerospike.amc.job.response+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/AerospikeAmcJobResponse'
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
        "501":
          description: Not Implemented
      schemes:
      - http
      - https
      security:
      - jwt:
        - api:general
      summary: jobs node
      tags:
      - node
  /api/v1/connections/{connId}/nodes/{node}/jobs/{trid}:
    get:
      description: |-
        Returns the list of jobs for the node.

        Required security scopes:
          * `api:enterprise`
      operationId: node#kill-job
      parameters:
      - description: Connection Id
        in: path
        name: connId
        pattern: '[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}'
        required: true
        type: string
      - description: Module
        in: query
        name: module
        pattern: scan|query
        required: true
        type: string
      - description: Node Address
        in: path
        name: node
        required: true
        type: string
      - description: TransactionId
        in: path
        name: trid
        required: true
        type: string
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
        "501":
          description: Not Implemented
      schemes:
      - http
      - https
      security:
      - jwt:
        - api:enterprise
      summary: kill-job node
      tags:
      - node
  /api/v1/connections/{connId}/nodes/{node}/latency:
    get:
      description: |-
        Returns the aggregate latency of the node namespaces for a given window of time. If From/To are not specified, the latest throughput will be returned.

        Required security scopes:
          * `api:enterprise`
      operationId: node#latency
      parameters:
      - description: Connection Id
        in: path
        name: connId
        pattern: '[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}'
        required: true
        type: string
      - description: From time in unix seconds
        in: query
        name: from
        required: false
        type: integer
      - description: Node Address
        in: path
        name: node
        required: true
        type: string
      - description: Until time in unix seconds
        in: query
        name: until
        required: false
        type: integer
      produces:
      - text/plain
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
        "501":
          description: Not Implemented
      schemes:
      - http
      - https
      security:
      - jwt:
        - api:enterprise
      summary: latency node
      tags:
      - node
  /api/v1/connections/{connId}/nodes/{node}/namespaces:
    get:
      description: |-
        Query a node's namespaces

        Required security scopes:
          * `api:general`
      operationId: namespace#query
      parameters:
      - description: Connection Id
        in: path
        name: connId
        pattern: '[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}'
        required: true
        type: string
      - description: Node Addresses
        in: path
        name: node
        required: true
        type: string
      produces:
      - text/plain
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "500":
          description: Internal Server Error
      schemes:
      - http
      - https
      security:
      - jwt:
        - api:general
      summary: query namespace
      tags:
      - namespace
  /api/v1/connections/{connId}/nodes/{node}/namespaces/{namespace}:
    delete:
      description: |-
        Drop a namespace from the cluster

        Required security scopes:
          * `api:general`
      operationId: namespace#drop
      parameters:
      - description: Connection Id
        in: path
        name: connId
        pattern: '[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}'
        required: true
        type: string
      - description: Module's Name
        in: path
        name: namespace
        required: true
        type: string
      - description: Node Addresses
        in: path
        name: node
        required: true
        type: string
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      schemes:
      - http
      - https
      security:
      - jwt:
        - api:general
      summary: drop namespace
      tags:
      - namespace
    get:
      description: |-
        Get a cluster's namespace

        Required security scopes:
          * `api:general`
      operationId: namespace#show
      parameters:
      - description: Connection Id
        in: path
        name: connId
        pattern: '[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}'
        required: true
        type: string
      - description: Namespace
        in: path
        name: namespace
        required: true
        type: string
      - description: Node Addresses
        in: path
        name: node
        required: true
        type: string
      produces:
      - application/vnd.aerospike.amc.namespace.response+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/AerospikeAmcNamespaceResponse'
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "500":
          description: Internal Server Error
      schemes:
      - http
      - https
      security:
      - jwt:
        - api:general
      summary: show namespace
      tags:
      - namespace
  /api/v1/connections/{connId}/nodes/{node}/namespaces/{namespace}/config:
    get:
      description: |-
        Returns the config of the namespace.

        Required security scopes:
          * `api:enterprise`
      operationId: namespace#config
      parameters:
      - description: Connection Id
        in: path
        name: connId
        pattern: '[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}'
        required: true
        type: string
      - description: Namespace name
        in: path
        name: namespace
        required: true
        type: string
      - description: Node Addresses
        in: path
        name: node
        required: true
        type: string
      produces:
      - application/vnd.aerospike.amc.namespace.config.response+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/AerospikeAmcNamespaceConfigResponse'
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
        "501":
          description: Not Implemented
      schemes:
      - http
      - https
      security:
      - jwt:
        - api:enterprise
      summary: config namespace
      tags:
      - namespace
    post:
      description: |-
        Changes the config of the namespace.

        Required security scopes:
          * `api:enterprise`
      operationId: namespace#set config
      parameters:
      - description: Connection Id
        in: path
        name: connId
        pattern: '[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}'
        required: true
        type: string
      - description: Namespace name
        in: path
        name: namespace
        required: true
        type: string
      - description: Node Addresses
        in: path
        name: node
        required: true
        type: string
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/SetConfigNamespacePayload'
      produces:
      - application/vnd.aerospike.amc.namespace.config.response+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/AerospikeAmcNamespaceConfigResponse'
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "406":
          description: Not Acceptable
        "500":
          description: Internal Server Error
      schemes:
      - http
      - https
      security:
      - jwt:
        - api:enterprise
      summary: set config namespace
      tags:
      - namespace
  /api/v1/connections/{connId}/nodes/{node}/namespaces/{namespace}/latency:
    get:
      description: |-
        Returns the aggregate latency of the namespace for a given window of time. If From/To are not specified, the latest throughput will be returned.

        Required security scopes:
          * `api:enterprise`
      operationId: namespace#latency
      parameters:
      - description: Connection Id
        in: path
        name: connId
        pattern: '[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}'
        required: true
        type: string
      - description: From time in unix seconds
        in: query
        name: from
        required: false
        type: integer
      - description: Namespace name
        in: path
        name: namespace
        required: true
        type: string
      - description: Node Addresses
        in: path
        name: node
        required: true
        type: string
      - description: Until time in unix seconds
        in: query
        name: until
        required: false
        type: integer
      produces:
      - text/plain
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
        "501":
          description: Not Implemented
      schemes:
      - http
      - https
      security:
      - jwt:
        - api:enterprise
      summary: latency namespace
      tags:
      - namespace
  /api/v1/connections/{connId}/nodes/{node}/namespaces/{namespace}/sets:
    get:
      description: |-
        Query a cluster's namespaces

        Required security scopes:
          * `api:general`
      operationId: set#query
      parameters:
      - description: Connection Id
        in: path
        name: connId
        pattern: '[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}'
        required: true
        type: string
      - description: Namespace
        in: path
        name: namespace
        required: true
        type: string
      - description: Node Addresses
        in: path
        name: node
        required: true
        type: string
      produces:
      - text/plain
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "500":
          description: Internal Server Error
      schemes:
      - http
      - https
      security:
      - jwt:
        - api:general
      summary: query set
      tags:
      - set
  /api/v1/connections/{connId}/nodes/{node}/namespaces/{namespace}/sets/{setName}:
    delete:
      description: |-
        Drop a set from the cluster (Supported by Aerospike server versions v3.12+)

        Required security scopes:
          * `api:general`
      operationId: set#drop
      parameters:
      - description: Connection Id
        in: path
        name: connId
        pattern: '[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}'
        required: true
        type: string
      - description: Namespace
        in: path
        name: namespace
        required: true
        type: string
      - description: Node Addresses
        in: path
        name: node
        required: true
        type: string
      - description: Set's Name
        in: path
        name: setName
        required: true
        type: string
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      schemes:
      - http
      - https
      security:
      - jwt:
        - api:general
      summary: drop set
      tags:
      - set
    get:
      description: |-
        Get a namespace's set

        Required security scopes:
          * `api:general`
      operationId: set#show
      parameters:
      - description: Connection Id
        in: path
        name: connId
        pattern: '[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}'
        required: true
        type: string
      - description: Namespace
        in: path
        name: namespace
        required: true
        type: string
      - description: Node Addresses
        in: path
        name: node
        required: true
        type: string
      - description: Set name
        in: path
        name: setName
        required: true
        type: string
      produces:
      - application/vnd.aerospike.amc.set.response+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/AerospikeAmcSetResponse'
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      schemes:
      - http
      - https
      security:
      - jwt:
        - api:general
      summary: show set
      tags:
      - set
  /api/v1/connections/{connId}/nodes/{node}/namespaces/{namespace}/throughput:
    get:
      description: |-
        Returns the aggregate throughput of the namespace for a given window of time. If From/To are not specified, the latest throughput will be returned.

        Required security scopes:
          * `api:general`
      operationId: namespace#throughput
      parameters:
      - description: Connection Id
        in: path
        name: connId
        pattern: '[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}'
        required: true
        type: string
      - description: From time in unix seconds
        in: query
        name: from
        required: false
        type: integer
      - description: Namespace
        in: path
        name: namespace
        required: true
        type: string
      - description: Node Addresses
        in: path
        name: node
        required: true
        type: string
      - description: Until time in unix seconds
        in: query
        name: until
        required: false
        type: integer
      produces:
      - application/vnd.aerospike.amc.throughput.wrapper.response+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/AerospikeAmcThroughputWrapperResponse'
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      schemes:
      - http
      - https
      security:
      - jwt:
        - api:general
      summary: throughput namespace
      tags:
      - namespace
  /api/v1/connections/{connId}/nodes/{node}/throughput:
    get:
      description: |-
        Returns the aggregate throughput of the node namespaces for a given window of time. If From/To are not specified, the latest throughput will be returned.

        Required security scopes:
          * `api:general`
      operationId: node#throughput
      parameters:
      - description: Connection Id
        in: path
        name: connId
        pattern: '[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}'
        required: true
        type: string
      - description: From time in unix seconds
        in: query
        name: from
        required: false
        type: integer
      - description: Node Address
        in: path
        name: node
        required: true
        type: string
      - description: Until time in unix seconds
        in: query
        name: until
        required: false
        type: integer
      produces:
      - application/vnd.aerospike.amc.throughput.wrapper.response+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/AerospikeAmcThroughputWrapperResponse'
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      schemes:
      - http
      - https
      security:
      - jwt:
        - api:general
      summary: throughput node
      tags:
      - node
  /api/v1/connections/{connId}/notifications:
    get:
      description: |-
        Returns the notifications for the cluster.

        Required security scopes:
          * `api:enterprise`
      operationId: notification#query
      parameters:
      - description: Connection Id
        in: path
        name: connId
        pattern: '[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}'
        required: true
        type: string
      - description: Last Notification ID the client has
        in: query
        name: lastId
        required: false
        type: integer
      produces:
      - text/plain
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      schemes:
      - http
      - https
      security:
      - jwt:
        - api:enterprise
      summary: query notification
      tags:
      - notification
  /api/v1/connections/{connId}/restores:
    post:
      description: |-
        Create a restore for the cluster

        Required security scopes:
          * `api:enterprise`
      operationId: restore#create
      parameters:
      - description: Connection Id
        in: path
        name: connId
        pattern: '[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}'
        required: true
        type: string
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/CreateRestorePayload'
      produces:
      - application/vnd.aerospike.amc.restore.response+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/AerospikeAmcRestoreResponse'
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      schemes:
      - http
      - https
      security:
      - jwt:
        - api:enterprise
      summary: create restore
      tags:
      - restore
  /api/v1/connections/{connId}/restores/progress:
    get:
      description: |-
        Get current restore that is in-progress

        Required security scopes:
          * `api:enterprise`
      operationId: restore#progress
      parameters:
      - description: Connection Id
        in: path
        name: connId
        pattern: '[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}'
        required: true
        type: string
      produces:
      - application/vnd.aerospike.amc.restore.response+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/AerospikeAmcRestoreResponse'
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      schemes:
      - http
      - https
      security:
      - jwt:
        - api:enterprise
      summary: progress restore
      tags:
      - restore
  /api/v1/connections/{connId}/roles:
    get:
      description: |-
        Get the list of roles

        Required security scopes:
          * `api:enterprise`
      operationId: db-role#query
      parameters:
      - description: Connection Id
        in: path
        name: connId
        pattern: '[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}'
        required: true
        type: string
      produces:
      - text/plain
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      schemes:
      - http
      - https
      security:
      - jwt:
        - api:enterprise
      summary: query db-role
      tags:
      - db-role
    post:
      description: |-
        Register or Update a role

        Required security scopes:
          * `api:enterprise`
      operationId: db-role#update
      parameters:
      - description: Connection Id
        in: path
        name: connId
        pattern: '[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}'
        required: true
        type: string
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/UpdateDbRolePayload'
      produces:
      - application/vnd.aerospike.amc.cluster.role.response+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/AerospikeAmcClusterRoleResponse'
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      schemes:
      - http
      - https
      security:
      - jwt:
        - api:enterprise
      summary: update db-role
      tags:
      - db-role
    put:
      description: |-
        Register or Update a role

        Required security scopes:
          * `api:enterprise`
      operationId: db-role#create
      parameters:
      - description: Connection Id
        in: path
        name: connId
        pattern: '[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}'
        required: true
        type: string
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/CreateDbRolePayload'
      produces:
      - application/vnd.aerospike.amc.cluster.role.response+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/AerospikeAmcClusterRoleResponse'
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      schemes:
      - http
      - https
      security:
      - jwt:
        - api:enterprise
      summary: create db-role
      tags:
      - db-role
  /api/v1/connections/{connId}/roles/{role}:
    delete:
      description: |-
        Delete a role

        Required security scopes:
          * `api:enterprise`
      operationId: db-role#delete
      parameters:
      - description: Connection Id
        in: path
        name: connId
        pattern: '[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}'
        required: true
        type: string
      - in: path
        name: role
        required: true
        type: string
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      schemes:
      - http
      - https
      security:
      - jwt:
        - api:enterprise
      summary: delete db-role
      tags:
      - db-role
  /api/v1/connections/{connId}/throughput:
    get:
      description: |-
        Returns the aggregate throughput of the connection nodes for a given window of time. If From/To are not specified, the latest throughput will be returned.

        Required security scopes:
          * `api:general`
      operationId: connection#throughput
      parameters:
      - description: Connection Id
        in: path
        name: connId
        pattern: '[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}'
        required: true
        type: string
      - description: From time in unix seconds
        in: query
        name: from
        required: false
        type: integer
      - description: Until time in unix seconds
        in: query
        name: until
        required: false
        type: integer
      produces:
      - application/vnd.aerospike.amc.throughput.wrapper.response+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/AerospikeAmcThroughputWrapperResponse'
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      schemes:
      - http
      - https
      security:
      - jwt:
        - api:general
      summary: throughput connection
      tags:
      - connection
  /api/v1/connections/{connId}/users:
    get:
      description: |-
        Get the list of users

        Required security scopes:
          * `api:enterprise`
      operationId: db-user#query
      parameters:
      - description: Connection Id
        in: path
        name: connId
        pattern: '[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}'
        required: true
        type: string
      produces:
      - text/plain
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      schemes:
      - http
      - https
      security:
      - jwt:
        - api:enterprise
      summary: query db-user
      tags:
      - db-user
    post:
      description: |-
        Register or Update a user

        Required security scopes:
          * `api:enterprise`
      operationId: db-user#update
      parameters:
      - description: Connection Id
        in: path
        name: connId
        pattern: '[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}'
        required: true
        type: string
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/UpdateDbUserPayload'
      produces:
      - application/vnd.aerospike.amc.cluster.user.response+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/AerospikeAmcClusterUserResponse'
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      schemes:
      - http
      - https
      security:
      - jwt:
        - api:enterprise
      summary: update db-user
      tags:
      - db-user
    put:
      description: |-
        Register or Update a user

        Required security scopes:
          * `api:enterprise`
      operationId: db-user#create
      parameters:
      - description: Connection Id
        in: path
        name: connId
        pattern: '[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}'
        required: true
        type: string
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/CreateDbUserPayload'
      produces:
      - application/vnd.aerospike.amc.cluster.user.response+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/AerospikeAmcClusterUserResponse'
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      schemes:
      - http
      - https
      security:
      - jwt:
        - api:enterprise
      summary: create db-user
      tags:
      - db-user
  /api/v1/connections/{connId}/users/{username}:
    delete:
      description: |-
        Delete a user

        Required security scopes:
          * `api:enterprise`
      operationId: db-user#delete
      parameters:
      - description: Connection Id
        in: path
        name: connId
        pattern: '[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}'
        required: true
        type: string
      - in: path
        name: username
        required: true
        type: string
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      schemes:
      - http
      - https
      security:
      - jwt:
        - api:enterprise
      summary: delete db-user
      tags:
      - db-user
    get:
      description: |-
        Get the information for users

        Required security scopes:
          * `api:enterprise`
      operationId: db-user#show
      parameters:
      - description: Connection Id
        in: path
        name: connId
        pattern: '[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}'
        required: true
        type: string
      - in: path
        name: username
        required: true
        type: string
      produces:
      - application/vnd.aerospike.amc.cluster.user.response+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/AerospikeAmcClusterUserResponse'
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      schemes:
      - http
      - https
      security:
      - jwt:
        - api:enterprise
      summary: show db-user
      tags:
      - db-user
  /api/v1/users:
    get:
      description: |-
        Get the list of users

        Required security scopes:
          * `api:admin`
      operationId: user#query
      produces:
      - text/plain
      responses:
        "200":
          description: OK
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      schemes:
      - http
      - https
      security:
      - jwt:
        - api:admin
      summary: query user
      tags:
      - user
    post:
      description: |-
        Register or Update a new user

        Required security scopes:
          * `api:admin`
      operationId: user#save
      parameters:
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/SaveUserPayload'
      produces:
      - application/vnd.aerospike.amc.user.query.response+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/AerospikeAmcUserQueryResponse'
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      schemes:
      - http
      - https
      security:
      - jwt:
        - api:admin
      summary: save user
      tags:
      - user
  /api/v1/users/{username}:
    delete:
      description: |-
        Delete a user

        Required security scopes:
          * `api:admin`
      operationId: user#delete
      parameters:
      - in: path
        name: username
        required: true
        type: string
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      schemes:
      - http
      - https
      security:
      - jwt:
        - api:admin
      summary: delete user
      tags:
      - user
    get:
      description: |-
        Get the list of users

        Required security scopes:
          * `api:admin`
      operationId: user#get
      parameters:
      - in: path
        name: username
        required: true
        type: string
      produces:
      - application/vnd.aerospike.amc.user.query.response+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/AerospikeAmcUserQueryResponse'
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      schemes:
      - http
      - https
      security:
      - jwt:
        - api:admin
      summary: get user
      tags:
      - user
  /static/{filepath}:
    get:
      operationId: public#/static/*filepath
      parameters:
      - description: Relative file path
        in: path
        name: filepath
        required: true
        type: string
      responses:
        "200":
          description: File downloaded
          schema:
            type: file
        "404":
          description: File not found
          schema:
            $ref: '#/definitions/error'
      schemes:
      - http
      - https
      summary: Download static_v5/
  /swagger.json:
    get:
      operationId: swagger#/swagger.json
      responses:
        "200":
          description: File downloaded
          schema:
            type: file
      schemes:
      - http
      - https
      summary: Download swagger/swagger.json
produces:
- application/json
responses:
  BadRequest:
    description: Bad Request
  Forbidden:
    description: Forbidden
  InternalServerError:
    description: Internal Server Error
  NoContent:
    description: No Content
  NotFound:
    description: Not Found
  Unauthorized:
    description: Unauthorized
schemes:
- http
- https
securityDefinitions:
  jwt:
    description: |2-


      **Security Scopes**:
        * `api:cluster`: API access to cluster resources
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
