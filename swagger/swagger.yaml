consumes:
- application/json
definitions:
  AerospikeAmcClusterResourceUsageResponse:
    description: Cluster Resource Usage (default view)
    example:
      free-bytes: 4.5896422e+18
      nodeDetails:
        Enim modi placeat quia sint est praesentium.:
          free-bytes: 5.1929137e+18
          total-bytes: 5.9448296e+18
          used-bytes: 4.00024e+18
      total-bytes: 8.2502163e+18
      used-bytes: 4.0863476e+18
    properties:
      free-bytes:
        description: Free Bytes
        example: 4.5896422e+18
        format: int64
        type: integer
      nodeDetails:
        additionalProperties: true
        description: Resource usage details.
        example:
          Enim modi placeat quia sint est praesentium.:
            free-bytes: 5.1929137e+18
            total-bytes: 5.9448296e+18
            used-bytes: 4.00024e+18
        type: object
      total-bytes:
        description: Total Bytes
        example: 8.2502163e+18
        format: int64
        type: integer
      used-bytes:
        description: Used Bytes
        example: 4.0863476e+18
        format: int64
        type: integer
    required:
    - used-bytes
    - free-bytes
    - total-bytes
    title: 'Mediatype identifier: application/vnd.aerospike.amc.cluster.resource.usage.response+json;
      view=default'
    type: object
  AerospikeAmcConnectionModulesResponseFull:
    description: Cluster Modules (full view)
    example:
      name: Consequatur ut laborum cupiditate modi dolorum hic.
      source: Voluptatem esse officia voluptatum aut amet qui.
      type: Unde laudantium.
    properties:
      name:
        description: Module's Name
        example: Consequatur ut laborum cupiditate modi dolorum hic.
        type: string
      source:
        description: Module's Source Code
        example: Voluptatem esse officia voluptatum aut amet qui.
        type: string
      type:
        description: Module's Source Type
        example: Unde laudantium.
        type: string
    title: 'Mediatype identifier: application/vnd.aerospike.amc.connection.modules.response+json;
      view=full'
    type: object
  AerospikeAmcConnectionResponse:
    description: User Connection (default view)
    example:
      activeRedAlertCount: 9.850432e+17
      clusterBuilds:
        latestVersion: Rerum autem perspiciatis ut eaque sunt eum.
        versionList:
          Magni ducimus quam eaque ullam maiores.:
          - Similique error rerum.
          - Similique error rerum.
          - Similique error rerum.
      connectOnLogin: true
      connected: true
      disk:
        free-bytes: 4.5896422e+18
        nodeDetails:
          Enim modi placeat quia sint est praesentium.:
            free-bytes: 5.1929137e+18
            total-bytes: 5.9448296e+18
            used-bytes: 4.00024e+18
        total-bytes: 8.2502163e+18
        used-bytes: 4.0863476e+18
      id: 70f01ba5-b14f-47d9-8d69-c5b4e960d88b
      memory:
        free-bytes: 4.5896422e+18
        nodeDetails:
          Enim modi placeat quia sint est praesentium.:
            free-bytes: 5.1929137e+18
            total-bytes: 5.9448296e+18
            used-bytes: 4.00024e+18
        total-bytes: 8.2502163e+18
        used-bytes: 4.0863476e+18
      name: Payments Cluster
      namespaces:
      - Sunt ullam facere omnis qui.
      - Sunt ullam facere omnis qui.
      - Sunt ullam facere omnis qui.
      nodes:
      - Molestiae dolorum dolores quos sit ut.
      nodesCompatibility: Iste deserunt.
      offNodes:
      - Ea nostrum natus.
      seeds:
      - host: 127.0.0.1
        port: 3000
        tlsName: ""
      - host: 127.0.0.1
        port: 3000
        tlsName: ""
      - host: 127.0.0.1
        port: 3000
        tlsName: ""
      status: Rem quia ducimus est.
      updateInterval: 1.947561e+18
      users:
      - Quod laboriosam doloribus ut eius.
      - Quod laboriosam doloribus ut eius.
      - Quod laboriosam doloribus ut eius.
    properties:
      activeRedAlertCount:
        description: Ative red alert count.
        example: 9.850432e+17
        format: int64
        type: integer
      clusterBuilds:
        $ref: '#/definitions/AerospikeAmcVersionInfoResponse'
      connectOnLogin:
        description: UI should connect to this connection automatically after AMC
          login
        example: true
        type: boolean
      connected:
        description: If AMC is already connected to this cluster for the current user.
        example: true
        type: boolean
      disk:
        $ref: '#/definitions/AerospikeAmcClusterResourceUsageResponse'
      id:
        description: Connection Id
        example: 70f01ba5-b14f-47d9-8d69-c5b4e960d88b
        pattern: '[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}'
        type: string
      memory:
        $ref: '#/definitions/AerospikeAmcClusterResourceUsageResponse'
      name:
        description: Connection Name
        example: Payments Cluster
        type: string
      namespaces:
        description: List of namespaces.
        example:
        - Sunt ullam facere omnis qui.
        - Sunt ullam facere omnis qui.
        - Sunt ullam facere omnis qui.
        items:
          example: Sunt ullam facere omnis qui.
          type: string
        type: array
      nodes:
        description: List of cluster nodes which have been discovered.
        example:
        - Molestiae dolorum dolores quos sit ut.
        items:
          example: Molestiae dolorum dolores quos sit ut.
          type: string
        type: array
      nodesCompatibility:
        description: 'If nodes are all from the same version: Values: homogenious/compatible'
        example: Iste deserunt.
        type: string
      offNodes:
        description: Inactive/Lost/Inaccessible nodes.
        example:
        - Ea nostrum natus.
        items:
          example: Ea nostrum natus.
          type: string
        type: array
      seeds:
        description: Seeds
        example:
        - host: 127.0.0.1
          port: 3000
          tlsName: ""
        - host: 127.0.0.1
          port: 3000
          tlsName: ""
        - host: 127.0.0.1
          port: 3000
          tlsName: ""
        items:
          $ref: '#/definitions/NodeSeed'
        type: array
      status:
        description: 'If cluster is connected: Values: on/off'
        example: Rem quia ducimus est.
        type: string
      updateInterval:
        description: Interval with which AMC fetches data from the database.
        example: 1.947561e+18
        format: int64
        type: integer
      users:
        description: Cluster users list.
        example:
        - Quod laboriosam doloribus ut eius.
        - Quod laboriosam doloribus ut eius.
        - Quod laboriosam doloribus ut eius.
        items:
          example: Quod laboriosam doloribus ut eius.
          type: string
        type: array
    required:
    - name
    - connectOnLogin
    - connected
    - clusterBuilds
    - activeRedAlertCount
    - offNodes
    - nodesCompatibility
    - status
    - namespaces
    - nodes
    - memory
    - updateInterval
    title: 'Mediatype identifier: application/vnd.aerospike.amc.connection.response+json;
      view=default'
    type: object
  AerospikeAmcConnectionTreeResponse:
    description: User Connection Entity Tree (default view)
    example:
      entityType: In omnis occaecati exercitationem est quis ratione.
      id: 70f01ba5-b14f-47d9-8d69-c5b4e960d88b
      lastUpdate: 5.299038e+18
      modules:
      - entityType: Autem quia magnam quo.
        hash: 06508300d1dc7e308ce8998bb4fe7a12505aa1f9
        lastUpdate: 8.2315675e+18
        name: map_reduce.lua
        type: lua
      - entityType: Autem quia magnam quo.
        hash: 06508300d1dc7e308ce8998bb4fe7a12505aa1f9
        lastUpdate: 8.2315675e+18
        name: map_reduce.lua
        type: lua
      - entityType: Autem quia magnam quo.
        hash: 06508300d1dc7e308ce8998bb4fe7a12505aa1f9
        lastUpdate: 8.2315675e+18
        name: map_reduce.lua
        type: lua
      nodes:
      - entityType: Cum quam ut dignissimos explicabo.
        host: 127.0.0.1:3000
        id: BB9EB6C71290C00
        lastUpdate: 3.720131e+18
        namespaces:
        - entityType: Odit laborum aliquid voluptates.
          lastUpdate: 7.6870877e+18
          name: Test
          sets:
          - entityType: Omnis magnam.
            indexes:
            - binName: id
              entityType: Qui tempora consequatur et dolorem.
              lastUpdate: 8.6996735e+18
              name: idx_test_customers_id
              type: NUMERIC
            - binName: id
              entityType: Qui tempora consequatur et dolorem.
              lastUpdate: 8.6996735e+18
              name: idx_test_customers_id
              type: NUMERIC
            - binName: id
              entityType: Qui tempora consequatur et dolorem.
              lastUpdate: 8.6996735e+18
              name: idx_test_customers_id
              type: NUMERIC
            lastUpdate: 9.1746587e+18
            name: Customers
          - entityType: Omnis magnam.
            indexes:
            - binName: id
              entityType: Qui tempora consequatur et dolorem.
              lastUpdate: 8.6996735e+18
              name: idx_test_customers_id
              type: NUMERIC
            - binName: id
              entityType: Qui tempora consequatur et dolorem.
              lastUpdate: 8.6996735e+18
              name: idx_test_customers_id
              type: NUMERIC
            - binName: id
              entityType: Qui tempora consequatur et dolorem.
              lastUpdate: 8.6996735e+18
              name: idx_test_customers_id
              type: NUMERIC
            lastUpdate: 9.1746587e+18
            name: Customers
        - entityType: Odit laborum aliquid voluptates.
          lastUpdate: 7.6870877e+18
          name: Test
          sets:
          - entityType: Omnis magnam.
            indexes:
            - binName: id
              entityType: Qui tempora consequatur et dolorem.
              lastUpdate: 8.6996735e+18
              name: idx_test_customers_id
              type: NUMERIC
            - binName: id
              entityType: Qui tempora consequatur et dolorem.
              lastUpdate: 8.6996735e+18
              name: idx_test_customers_id
              type: NUMERIC
            - binName: id
              entityType: Qui tempora consequatur et dolorem.
              lastUpdate: 8.6996735e+18
              name: idx_test_customers_id
              type: NUMERIC
            lastUpdate: 9.1746587e+18
            name: Customers
          - entityType: Omnis magnam.
            indexes:
            - binName: id
              entityType: Qui tempora consequatur et dolorem.
              lastUpdate: 8.6996735e+18
              name: idx_test_customers_id
              type: NUMERIC
            - binName: id
              entityType: Qui tempora consequatur et dolorem.
              lastUpdate: 8.6996735e+18
              name: idx_test_customers_id
              type: NUMERIC
            - binName: id
              entityType: Qui tempora consequatur et dolorem.
              lastUpdate: 8.6996735e+18
              name: idx_test_customers_id
              type: NUMERIC
            lastUpdate: 9.1746587e+18
            name: Customers
        - entityType: Odit laborum aliquid voluptates.
          lastUpdate: 7.6870877e+18
          name: Test
          sets:
          - entityType: Omnis magnam.
            indexes:
            - binName: id
              entityType: Qui tempora consequatur et dolorem.
              lastUpdate: 8.6996735e+18
              name: idx_test_customers_id
              type: NUMERIC
            - binName: id
              entityType: Qui tempora consequatur et dolorem.
              lastUpdate: 8.6996735e+18
              name: idx_test_customers_id
              type: NUMERIC
            - binName: id
              entityType: Qui tempora consequatur et dolorem.
              lastUpdate: 8.6996735e+18
              name: idx_test_customers_id
              type: NUMERIC
            lastUpdate: 9.1746587e+18
            name: Customers
          - entityType: Omnis magnam.
            indexes:
            - binName: id
              entityType: Qui tempora consequatur et dolorem.
              lastUpdate: 8.6996735e+18
              name: idx_test_customers_id
              type: NUMERIC
            - binName: id
              entityType: Qui tempora consequatur et dolorem.
              lastUpdate: 8.6996735e+18
              name: idx_test_customers_id
              type: NUMERIC
            - binName: id
              entityType: Qui tempora consequatur et dolorem.
              lastUpdate: 8.6996735e+18
              name: idx_test_customers_id
              type: NUMERIC
            lastUpdate: 9.1746587e+18
            name: Customers
      - entityType: Cum quam ut dignissimos explicabo.
        host: 127.0.0.1:3000
        id: BB9EB6C71290C00
        lastUpdate: 3.720131e+18
        namespaces:
        - entityType: Odit laborum aliquid voluptates.
          lastUpdate: 7.6870877e+18
          name: Test
          sets:
          - entityType: Omnis magnam.
            indexes:
            - binName: id
              entityType: Qui tempora consequatur et dolorem.
              lastUpdate: 8.6996735e+18
              name: idx_test_customers_id
              type: NUMERIC
            - binName: id
              entityType: Qui tempora consequatur et dolorem.
              lastUpdate: 8.6996735e+18
              name: idx_test_customers_id
              type: NUMERIC
            - binName: id
              entityType: Qui tempora consequatur et dolorem.
              lastUpdate: 8.6996735e+18
              name: idx_test_customers_id
              type: NUMERIC
            lastUpdate: 9.1746587e+18
            name: Customers
          - entityType: Omnis magnam.
            indexes:
            - binName: id
              entityType: Qui tempora consequatur et dolorem.
              lastUpdate: 8.6996735e+18
              name: idx_test_customers_id
              type: NUMERIC
            - binName: id
              entityType: Qui tempora consequatur et dolorem.
              lastUpdate: 8.6996735e+18
              name: idx_test_customers_id
              type: NUMERIC
            - binName: id
              entityType: Qui tempora consequatur et dolorem.
              lastUpdate: 8.6996735e+18
              name: idx_test_customers_id
              type: NUMERIC
            lastUpdate: 9.1746587e+18
            name: Customers
        - entityType: Odit laborum aliquid voluptates.
          lastUpdate: 7.6870877e+18
          name: Test
          sets:
          - entityType: Omnis magnam.
            indexes:
            - binName: id
              entityType: Qui tempora consequatur et dolorem.
              lastUpdate: 8.6996735e+18
              name: idx_test_customers_id
              type: NUMERIC
            - binName: id
              entityType: Qui tempora consequatur et dolorem.
              lastUpdate: 8.6996735e+18
              name: idx_test_customers_id
              type: NUMERIC
            - binName: id
              entityType: Qui tempora consequatur et dolorem.
              lastUpdate: 8.6996735e+18
              name: idx_test_customers_id
              type: NUMERIC
            lastUpdate: 9.1746587e+18
            name: Customers
          - entityType: Omnis magnam.
            indexes:
            - binName: id
              entityType: Qui tempora consequatur et dolorem.
              lastUpdate: 8.6996735e+18
              name: idx_test_customers_id
              type: NUMERIC
            - binName: id
              entityType: Qui tempora consequatur et dolorem.
              lastUpdate: 8.6996735e+18
              name: idx_test_customers_id
              type: NUMERIC
            - binName: id
              entityType: Qui tempora consequatur et dolorem.
              lastUpdate: 8.6996735e+18
              name: idx_test_customers_id
              type: NUMERIC
            lastUpdate: 9.1746587e+18
            name: Customers
        - entityType: Odit laborum aliquid voluptates.
          lastUpdate: 7.6870877e+18
          name: Test
          sets:
          - entityType: Omnis magnam.
            indexes:
            - binName: id
              entityType: Qui tempora consequatur et dolorem.
              lastUpdate: 8.6996735e+18
              name: idx_test_customers_id
              type: NUMERIC
            - binName: id
              entityType: Qui tempora consequatur et dolorem.
              lastUpdate: 8.6996735e+18
              name: idx_test_customers_id
              type: NUMERIC
            - binName: id
              entityType: Qui tempora consequatur et dolorem.
              lastUpdate: 8.6996735e+18
              name: idx_test_customers_id
              type: NUMERIC
            lastUpdate: 9.1746587e+18
            name: Customers
          - entityType: Omnis magnam.
            indexes:
            - binName: id
              entityType: Qui tempora consequatur et dolorem.
              lastUpdate: 8.6996735e+18
              name: idx_test_customers_id
              type: NUMERIC
            - binName: id
              entityType: Qui tempora consequatur et dolorem.
              lastUpdate: 8.6996735e+18
              name: idx_test_customers_id
              type: NUMERIC
            - binName: id
              entityType: Qui tempora consequatur et dolorem.
              lastUpdate: 8.6996735e+18
              name: idx_test_customers_id
              type: NUMERIC
            lastUpdate: 9.1746587e+18
            name: Customers
      status: Et facere vel.
    properties:
      entityType:
        description: Entity Type
        example: In omnis occaecati exercitationem est quis ratione.
        type: string
      id:
        description: Connection Id
        example: 70f01ba5-b14f-47d9-8d69-c5b4e960d88b
        pattern: '[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}'
        type: string
      lastUpdate:
        description: Last Update Of This Entity in Unix Seconds
        example: 5.299038e+18
        format: int64
        type: integer
      modules:
        description: modules
        example:
        - entityType: Autem quia magnam quo.
          hash: 06508300d1dc7e308ce8998bb4fe7a12505aa1f9
          lastUpdate: 8.2315675e+18
          name: map_reduce.lua
          type: lua
        - entityType: Autem quia magnam quo.
          hash: 06508300d1dc7e308ce8998bb4fe7a12505aa1f9
          lastUpdate: 8.2315675e+18
          name: map_reduce.lua
          type: lua
        - entityType: Autem quia magnam quo.
          hash: 06508300d1dc7e308ce8998bb4fe7a12505aa1f9
          lastUpdate: 8.2315675e+18
          name: map_reduce.lua
          type: lua
        items:
          $ref: '#/definitions/AerospikeAmcEntityModuleResponse'
        type: array
      nodes:
        description: Nodes
        example:
        - entityType: Cum quam ut dignissimos explicabo.
          host: 127.0.0.1:3000
          id: BB9EB6C71290C00
          lastUpdate: 3.720131e+18
          namespaces:
          - entityType: Odit laborum aliquid voluptates.
            lastUpdate: 7.6870877e+18
            name: Test
            sets:
            - entityType: Omnis magnam.
              indexes:
              - binName: id
                entityType: Qui tempora consequatur et dolorem.
                lastUpdate: 8.6996735e+18
                name: idx_test_customers_id
                type: NUMERIC
              - binName: id
                entityType: Qui tempora consequatur et dolorem.
                lastUpdate: 8.6996735e+18
                name: idx_test_customers_id
                type: NUMERIC
              - binName: id
                entityType: Qui tempora consequatur et dolorem.
                lastUpdate: 8.6996735e+18
                name: idx_test_customers_id
                type: NUMERIC
              lastUpdate: 9.1746587e+18
              name: Customers
            - entityType: Omnis magnam.
              indexes:
              - binName: id
                entityType: Qui tempora consequatur et dolorem.
                lastUpdate: 8.6996735e+18
                name: idx_test_customers_id
                type: NUMERIC
              - binName: id
                entityType: Qui tempora consequatur et dolorem.
                lastUpdate: 8.6996735e+18
                name: idx_test_customers_id
                type: NUMERIC
              - binName: id
                entityType: Qui tempora consequatur et dolorem.
                lastUpdate: 8.6996735e+18
                name: idx_test_customers_id
                type: NUMERIC
              lastUpdate: 9.1746587e+18
              name: Customers
          - entityType: Odit laborum aliquid voluptates.
            lastUpdate: 7.6870877e+18
            name: Test
            sets:
            - entityType: Omnis magnam.
              indexes:
              - binName: id
                entityType: Qui tempora consequatur et dolorem.
                lastUpdate: 8.6996735e+18
                name: idx_test_customers_id
                type: NUMERIC
              - binName: id
                entityType: Qui tempora consequatur et dolorem.
                lastUpdate: 8.6996735e+18
                name: idx_test_customers_id
                type: NUMERIC
              - binName: id
                entityType: Qui tempora consequatur et dolorem.
                lastUpdate: 8.6996735e+18
                name: idx_test_customers_id
                type: NUMERIC
              lastUpdate: 9.1746587e+18
              name: Customers
            - entityType: Omnis magnam.
              indexes:
              - binName: id
                entityType: Qui tempora consequatur et dolorem.
                lastUpdate: 8.6996735e+18
                name: idx_test_customers_id
                type: NUMERIC
              - binName: id
                entityType: Qui tempora consequatur et dolorem.
                lastUpdate: 8.6996735e+18
                name: idx_test_customers_id
                type: NUMERIC
              - binName: id
                entityType: Qui tempora consequatur et dolorem.
                lastUpdate: 8.6996735e+18
                name: idx_test_customers_id
                type: NUMERIC
              lastUpdate: 9.1746587e+18
              name: Customers
          - entityType: Odit laborum aliquid voluptates.
            lastUpdate: 7.6870877e+18
            name: Test
            sets:
            - entityType: Omnis magnam.
              indexes:
              - binName: id
                entityType: Qui tempora consequatur et dolorem.
                lastUpdate: 8.6996735e+18
                name: idx_test_customers_id
                type: NUMERIC
              - binName: id
                entityType: Qui tempora consequatur et dolorem.
                lastUpdate: 8.6996735e+18
                name: idx_test_customers_id
                type: NUMERIC
              - binName: id
                entityType: Qui tempora consequatur et dolorem.
                lastUpdate: 8.6996735e+18
                name: idx_test_customers_id
                type: NUMERIC
              lastUpdate: 9.1746587e+18
              name: Customers
            - entityType: Omnis magnam.
              indexes:
              - binName: id
                entityType: Qui tempora consequatur et dolorem.
                lastUpdate: 8.6996735e+18
                name: idx_test_customers_id
                type: NUMERIC
              - binName: id
                entityType: Qui tempora consequatur et dolorem.
                lastUpdate: 8.6996735e+18
                name: idx_test_customers_id
                type: NUMERIC
              - binName: id
                entityType: Qui tempora consequatur et dolorem.
                lastUpdate: 8.6996735e+18
                name: idx_test_customers_id
                type: NUMERIC
              lastUpdate: 9.1746587e+18
              name: Customers
        - entityType: Cum quam ut dignissimos explicabo.
          host: 127.0.0.1:3000
          id: BB9EB6C71290C00
          lastUpdate: 3.720131e+18
          namespaces:
          - entityType: Odit laborum aliquid voluptates.
            lastUpdate: 7.6870877e+18
            name: Test
            sets:
            - entityType: Omnis magnam.
              indexes:
              - binName: id
                entityType: Qui tempora consequatur et dolorem.
                lastUpdate: 8.6996735e+18
                name: idx_test_customers_id
                type: NUMERIC
              - binName: id
                entityType: Qui tempora consequatur et dolorem.
                lastUpdate: 8.6996735e+18
                name: idx_test_customers_id
                type: NUMERIC
              - binName: id
                entityType: Qui tempora consequatur et dolorem.
                lastUpdate: 8.6996735e+18
                name: idx_test_customers_id
                type: NUMERIC
              lastUpdate: 9.1746587e+18
              name: Customers
            - entityType: Omnis magnam.
              indexes:
              - binName: id
                entityType: Qui tempora consequatur et dolorem.
                lastUpdate: 8.6996735e+18
                name: idx_test_customers_id
                type: NUMERIC
              - binName: id
                entityType: Qui tempora consequatur et dolorem.
                lastUpdate: 8.6996735e+18
                name: idx_test_customers_id
                type: NUMERIC
              - binName: id
                entityType: Qui tempora consequatur et dolorem.
                lastUpdate: 8.6996735e+18
                name: idx_test_customers_id
                type: NUMERIC
              lastUpdate: 9.1746587e+18
              name: Customers
          - entityType: Odit laborum aliquid voluptates.
            lastUpdate: 7.6870877e+18
            name: Test
            sets:
            - entityType: Omnis magnam.
              indexes:
              - binName: id
                entityType: Qui tempora consequatur et dolorem.
                lastUpdate: 8.6996735e+18
                name: idx_test_customers_id
                type: NUMERIC
              - binName: id
                entityType: Qui tempora consequatur et dolorem.
                lastUpdate: 8.6996735e+18
                name: idx_test_customers_id
                type: NUMERIC
              - binName: id
                entityType: Qui tempora consequatur et dolorem.
                lastUpdate: 8.6996735e+18
                name: idx_test_customers_id
                type: NUMERIC
              lastUpdate: 9.1746587e+18
              name: Customers
            - entityType: Omnis magnam.
              indexes:
              - binName: id
                entityType: Qui tempora consequatur et dolorem.
                lastUpdate: 8.6996735e+18
                name: idx_test_customers_id
                type: NUMERIC
              - binName: id
                entityType: Qui tempora consequatur et dolorem.
                lastUpdate: 8.6996735e+18
                name: idx_test_customers_id
                type: NUMERIC
              - binName: id
                entityType: Qui tempora consequatur et dolorem.
                lastUpdate: 8.6996735e+18
                name: idx_test_customers_id
                type: NUMERIC
              lastUpdate: 9.1746587e+18
              name: Customers
          - entityType: Odit laborum aliquid voluptates.
            lastUpdate: 7.6870877e+18
            name: Test
            sets:
            - entityType: Omnis magnam.
              indexes:
              - binName: id
                entityType: Qui tempora consequatur et dolorem.
                lastUpdate: 8.6996735e+18
                name: idx_test_customers_id
                type: NUMERIC
              - binName: id
                entityType: Qui tempora consequatur et dolorem.
                lastUpdate: 8.6996735e+18
                name: idx_test_customers_id
                type: NUMERIC
              - binName: id
                entityType: Qui tempora consequatur et dolorem.
                lastUpdate: 8.6996735e+18
                name: idx_test_customers_id
                type: NUMERIC
              lastUpdate: 9.1746587e+18
              name: Customers
            - entityType: Omnis magnam.
              indexes:
              - binName: id
                entityType: Qui tempora consequatur et dolorem.
                lastUpdate: 8.6996735e+18
                name: idx_test_customers_id
                type: NUMERIC
              - binName: id
                entityType: Qui tempora consequatur et dolorem.
                lastUpdate: 8.6996735e+18
                name: idx_test_customers_id
                type: NUMERIC
              - binName: id
                entityType: Qui tempora consequatur et dolorem.
                lastUpdate: 8.6996735e+18
                name: idx_test_customers_id
                type: NUMERIC
              lastUpdate: 9.1746587e+18
              name: Customers
        items:
          $ref: '#/definitions/AerospikeAmcEntityNodeResponse'
        type: array
      status:
        description: Cureent connection status.
        example: Et facere vel.
        type: string
    required:
    - id
    - entityType
    - lastUpdate
    - status
    title: 'Mediatype identifier: application/vnd.aerospike.amc.connection.tree.response+json;
      view=default'
    type: object
  AerospikeAmcEntityIndexResponse:
    description: Index Entity (default view)
    example:
      binName: id
      entityType: Qui tempora consequatur et dolorem.
      lastUpdate: 8.6996735e+18
      name: idx_test_customers_id
      type: NUMERIC
    properties:
      binName:
        description: Bin Name
        example: id
        type: string
      entityType:
        description: Type
        example: Qui tempora consequatur et dolorem.
        type: string
      lastUpdate:
        description: Last Update Of This Entity in Unix Seconds
        example: 8.6996735e+18
        format: int64
        type: integer
      name:
        description: Set Name
        example: idx_test_customers_id
        type: string
      type:
        description: Index Type
        example: NUMERIC
        type: string
    required:
    - name
    - binName
    - type
    - entityType
    - lastUpdate
    title: 'Mediatype identifier: application/vnd.aerospike.amc.entity.index.response+json;
      view=default'
    type: object
  AerospikeAmcEntityModuleResponse:
    description: Module Entity (default view)
    example:
      entityType: Autem quia magnam quo.
      hash: 06508300d1dc7e308ce8998bb4fe7a12505aa1f9
      lastUpdate: 8.2315675e+18
      name: map_reduce.lua
      type: lua
    properties:
      entityType:
        description: Type
        example: Autem quia magnam quo.
        type: string
      hash:
        description: Module Hash
        example: 06508300d1dc7e308ce8998bb4fe7a12505aa1f9
        type: string
      lastUpdate:
        description: Last Update Of This Entity in Unix Seconds
        example: 8.2315675e+18
        format: int64
        type: integer
      name:
        description: Module Name
        example: map_reduce.lua
        type: string
      type:
        description: Module Type
        example: lua
        type: string
    required:
    - name
    - hash
    - type
    - entityType
    - lastUpdate
    title: 'Mediatype identifier: application/vnd.aerospike.amc.entity.module.response+json;
      view=default'
    type: object
  AerospikeAmcEntityNamespaceResponse:
    description: Namespace Entity (default view)
    example:
      entityType: Odit laborum aliquid voluptates.
      lastUpdate: 7.6870877e+18
      name: Test
      sets:
      - entityType: Omnis magnam.
        indexes:
        - binName: id
          entityType: Qui tempora consequatur et dolorem.
          lastUpdate: 8.6996735e+18
          name: idx_test_customers_id
          type: NUMERIC
        - binName: id
          entityType: Qui tempora consequatur et dolorem.
          lastUpdate: 8.6996735e+18
          name: idx_test_customers_id
          type: NUMERIC
        - binName: id
          entityType: Qui tempora consequatur et dolorem.
          lastUpdate: 8.6996735e+18
          name: idx_test_customers_id
          type: NUMERIC
        lastUpdate: 9.1746587e+18
        name: Customers
      - entityType: Omnis magnam.
        indexes:
        - binName: id
          entityType: Qui tempora consequatur et dolorem.
          lastUpdate: 8.6996735e+18
          name: idx_test_customers_id
          type: NUMERIC
        - binName: id
          entityType: Qui tempora consequatur et dolorem.
          lastUpdate: 8.6996735e+18
          name: idx_test_customers_id
          type: NUMERIC
        - binName: id
          entityType: Qui tempora consequatur et dolorem.
          lastUpdate: 8.6996735e+18
          name: idx_test_customers_id
          type: NUMERIC
        lastUpdate: 9.1746587e+18
        name: Customers
    properties:
      entityType:
        description: Type
        example: Odit laborum aliquid voluptates.
        type: string
      lastUpdate:
        description: Last Update Of This Entity in Unix Seconds
        example: 7.6870877e+18
        format: int64
        type: integer
      name:
        description: Namespace Name
        example: Test
        type: string
      sets:
        description: Namespaces
        example:
        - entityType: Omnis magnam.
          indexes:
          - binName: id
            entityType: Qui tempora consequatur et dolorem.
            lastUpdate: 8.6996735e+18
            name: idx_test_customers_id
            type: NUMERIC
          - binName: id
            entityType: Qui tempora consequatur et dolorem.
            lastUpdate: 8.6996735e+18
            name: idx_test_customers_id
            type: NUMERIC
          - binName: id
            entityType: Qui tempora consequatur et dolorem.
            lastUpdate: 8.6996735e+18
            name: idx_test_customers_id
            type: NUMERIC
          lastUpdate: 9.1746587e+18
          name: Customers
        - entityType: Omnis magnam.
          indexes:
          - binName: id
            entityType: Qui tempora consequatur et dolorem.
            lastUpdate: 8.6996735e+18
            name: idx_test_customers_id
            type: NUMERIC
          - binName: id
            entityType: Qui tempora consequatur et dolorem.
            lastUpdate: 8.6996735e+18
            name: idx_test_customers_id
            type: NUMERIC
          - binName: id
            entityType: Qui tempora consequatur et dolorem.
            lastUpdate: 8.6996735e+18
            name: idx_test_customers_id
            type: NUMERIC
          lastUpdate: 9.1746587e+18
          name: Customers
        items:
          $ref: '#/definitions/AerospikeAmcEntitySetResponse'
        type: array
    required:
    - name
    - entityType
    - lastUpdate
    title: 'Mediatype identifier: application/vnd.aerospike.amc.entity.namespace.response+json;
      view=default'
    type: object
  AerospikeAmcEntityNodeResponse:
    description: Node Entity (default view)
    example:
      entityType: Cum quam ut dignissimos explicabo.
      host: 127.0.0.1:3000
      id: BB9EB6C71290C00
      lastUpdate: 3.720131e+18
      namespaces:
      - entityType: Odit laborum aliquid voluptates.
        lastUpdate: 7.6870877e+18
        name: Test
        sets:
        - entityType: Omnis magnam.
          indexes:
          - binName: id
            entityType: Qui tempora consequatur et dolorem.
            lastUpdate: 8.6996735e+18
            name: idx_test_customers_id
            type: NUMERIC
          - binName: id
            entityType: Qui tempora consequatur et dolorem.
            lastUpdate: 8.6996735e+18
            name: idx_test_customers_id
            type: NUMERIC
          - binName: id
            entityType: Qui tempora consequatur et dolorem.
            lastUpdate: 8.6996735e+18
            name: idx_test_customers_id
            type: NUMERIC
          lastUpdate: 9.1746587e+18
          name: Customers
        - entityType: Omnis magnam.
          indexes:
          - binName: id
            entityType: Qui tempora consequatur et dolorem.
            lastUpdate: 8.6996735e+18
            name: idx_test_customers_id
            type: NUMERIC
          - binName: id
            entityType: Qui tempora consequatur et dolorem.
            lastUpdate: 8.6996735e+18
            name: idx_test_customers_id
            type: NUMERIC
          - binName: id
            entityType: Qui tempora consequatur et dolorem.
            lastUpdate: 8.6996735e+18
            name: idx_test_customers_id
            type: NUMERIC
          lastUpdate: 9.1746587e+18
          name: Customers
      - entityType: Odit laborum aliquid voluptates.
        lastUpdate: 7.6870877e+18
        name: Test
        sets:
        - entityType: Omnis magnam.
          indexes:
          - binName: id
            entityType: Qui tempora consequatur et dolorem.
            lastUpdate: 8.6996735e+18
            name: idx_test_customers_id
            type: NUMERIC
          - binName: id
            entityType: Qui tempora consequatur et dolorem.
            lastUpdate: 8.6996735e+18
            name: idx_test_customers_id
            type: NUMERIC
          - binName: id
            entityType: Qui tempora consequatur et dolorem.
            lastUpdate: 8.6996735e+18
            name: idx_test_customers_id
            type: NUMERIC
          lastUpdate: 9.1746587e+18
          name: Customers
        - entityType: Omnis magnam.
          indexes:
          - binName: id
            entityType: Qui tempora consequatur et dolorem.
            lastUpdate: 8.6996735e+18
            name: idx_test_customers_id
            type: NUMERIC
          - binName: id
            entityType: Qui tempora consequatur et dolorem.
            lastUpdate: 8.6996735e+18
            name: idx_test_customers_id
            type: NUMERIC
          - binName: id
            entityType: Qui tempora consequatur et dolorem.
            lastUpdate: 8.6996735e+18
            name: idx_test_customers_id
            type: NUMERIC
          lastUpdate: 9.1746587e+18
          name: Customers
      - entityType: Odit laborum aliquid voluptates.
        lastUpdate: 7.6870877e+18
        name: Test
        sets:
        - entityType: Omnis magnam.
          indexes:
          - binName: id
            entityType: Qui tempora consequatur et dolorem.
            lastUpdate: 8.6996735e+18
            name: idx_test_customers_id
            type: NUMERIC
          - binName: id
            entityType: Qui tempora consequatur et dolorem.
            lastUpdate: 8.6996735e+18
            name: idx_test_customers_id
            type: NUMERIC
          - binName: id
            entityType: Qui tempora consequatur et dolorem.
            lastUpdate: 8.6996735e+18
            name: idx_test_customers_id
            type: NUMERIC
          lastUpdate: 9.1746587e+18
          name: Customers
        - entityType: Omnis magnam.
          indexes:
          - binName: id
            entityType: Qui tempora consequatur et dolorem.
            lastUpdate: 8.6996735e+18
            name: idx_test_customers_id
            type: NUMERIC
          - binName: id
            entityType: Qui tempora consequatur et dolorem.
            lastUpdate: 8.6996735e+18
            name: idx_test_customers_id
            type: NUMERIC
          - binName: id
            entityType: Qui tempora consequatur et dolorem.
            lastUpdate: 8.6996735e+18
            name: idx_test_customers_id
            type: NUMERIC
          lastUpdate: 9.1746587e+18
          name: Customers
    properties:
      entityType:
        description: Type
        example: Cum quam ut dignissimos explicabo.
        type: string
      host:
        description: Network Host Address
        example: 127.0.0.1:3000
        type: string
      id:
        description: Node Id
        example: BB9EB6C71290C00
        type: string
      lastUpdate:
        description: Last Update Of This Entity in Unix Seconds
        example: 3.720131e+18
        format: int64
        type: integer
      namespaces:
        description: Namespaces
        example:
        - entityType: Odit laborum aliquid voluptates.
          lastUpdate: 7.6870877e+18
          name: Test
          sets:
          - entityType: Omnis magnam.
            indexes:
            - binName: id
              entityType: Qui tempora consequatur et dolorem.
              lastUpdate: 8.6996735e+18
              name: idx_test_customers_id
              type: NUMERIC
            - binName: id
              entityType: Qui tempora consequatur et dolorem.
              lastUpdate: 8.6996735e+18
              name: idx_test_customers_id
              type: NUMERIC
            - binName: id
              entityType: Qui tempora consequatur et dolorem.
              lastUpdate: 8.6996735e+18
              name: idx_test_customers_id
              type: NUMERIC
            lastUpdate: 9.1746587e+18
            name: Customers
          - entityType: Omnis magnam.
            indexes:
            - binName: id
              entityType: Qui tempora consequatur et dolorem.
              lastUpdate: 8.6996735e+18
              name: idx_test_customers_id
              type: NUMERIC
            - binName: id
              entityType: Qui tempora consequatur et dolorem.
              lastUpdate: 8.6996735e+18
              name: idx_test_customers_id
              type: NUMERIC
            - binName: id
              entityType: Qui tempora consequatur et dolorem.
              lastUpdate: 8.6996735e+18
              name: idx_test_customers_id
              type: NUMERIC
            lastUpdate: 9.1746587e+18
            name: Customers
        - entityType: Odit laborum aliquid voluptates.
          lastUpdate: 7.6870877e+18
          name: Test
          sets:
          - entityType: Omnis magnam.
            indexes:
            - binName: id
              entityType: Qui tempora consequatur et dolorem.
              lastUpdate: 8.6996735e+18
              name: idx_test_customers_id
              type: NUMERIC
            - binName: id
              entityType: Qui tempora consequatur et dolorem.
              lastUpdate: 8.6996735e+18
              name: idx_test_customers_id
              type: NUMERIC
            - binName: id
              entityType: Qui tempora consequatur et dolorem.
              lastUpdate: 8.6996735e+18
              name: idx_test_customers_id
              type: NUMERIC
            lastUpdate: 9.1746587e+18
            name: Customers
          - entityType: Omnis magnam.
            indexes:
            - binName: id
              entityType: Qui tempora consequatur et dolorem.
              lastUpdate: 8.6996735e+18
              name: idx_test_customers_id
              type: NUMERIC
            - binName: id
              entityType: Qui tempora consequatur et dolorem.
              lastUpdate: 8.6996735e+18
              name: idx_test_customers_id
              type: NUMERIC
            - binName: id
              entityType: Qui tempora consequatur et dolorem.
              lastUpdate: 8.6996735e+18
              name: idx_test_customers_id
              type: NUMERIC
            lastUpdate: 9.1746587e+18
            name: Customers
        - entityType: Odit laborum aliquid voluptates.
          lastUpdate: 7.6870877e+18
          name: Test
          sets:
          - entityType: Omnis magnam.
            indexes:
            - binName: id
              entityType: Qui tempora consequatur et dolorem.
              lastUpdate: 8.6996735e+18
              name: idx_test_customers_id
              type: NUMERIC
            - binName: id
              entityType: Qui tempora consequatur et dolorem.
              lastUpdate: 8.6996735e+18
              name: idx_test_customers_id
              type: NUMERIC
            - binName: id
              entityType: Qui tempora consequatur et dolorem.
              lastUpdate: 8.6996735e+18
              name: idx_test_customers_id
              type: NUMERIC
            lastUpdate: 9.1746587e+18
            name: Customers
          - entityType: Omnis magnam.
            indexes:
            - binName: id
              entityType: Qui tempora consequatur et dolorem.
              lastUpdate: 8.6996735e+18
              name: idx_test_customers_id
              type: NUMERIC
            - binName: id
              entityType: Qui tempora consequatur et dolorem.
              lastUpdate: 8.6996735e+18
              name: idx_test_customers_id
              type: NUMERIC
            - binName: id
              entityType: Qui tempora consequatur et dolorem.
              lastUpdate: 8.6996735e+18
              name: idx_test_customers_id
              type: NUMERIC
            lastUpdate: 9.1746587e+18
            name: Customers
        items:
          $ref: '#/definitions/AerospikeAmcEntityNamespaceResponse'
        type: array
    required:
    - host
    - id
    - entityType
    - lastUpdate
    title: 'Mediatype identifier: application/vnd.aerospike.amc.entity.node.response+json;
      view=default'
    type: object
  AerospikeAmcEntitySetResponse:
    description: Set Entity (default view)
    example:
      entityType: Omnis magnam.
      indexes:
      - binName: id
        entityType: Qui tempora consequatur et dolorem.
        lastUpdate: 8.6996735e+18
        name: idx_test_customers_id
        type: NUMERIC
      - binName: id
        entityType: Qui tempora consequatur et dolorem.
        lastUpdate: 8.6996735e+18
        name: idx_test_customers_id
        type: NUMERIC
      - binName: id
        entityType: Qui tempora consequatur et dolorem.
        lastUpdate: 8.6996735e+18
        name: idx_test_customers_id
        type: NUMERIC
      lastUpdate: 9.1746587e+18
      name: Customers
    properties:
      entityType:
        description: Type
        example: Omnis magnam.
        type: string
      indexes:
        description: Indexes
        example:
        - binName: id
          entityType: Qui tempora consequatur et dolorem.
          lastUpdate: 8.6996735e+18
          name: idx_test_customers_id
          type: NUMERIC
        - binName: id
          entityType: Qui tempora consequatur et dolorem.
          lastUpdate: 8.6996735e+18
          name: idx_test_customers_id
          type: NUMERIC
        - binName: id
          entityType: Qui tempora consequatur et dolorem.
          lastUpdate: 8.6996735e+18
          name: idx_test_customers_id
          type: NUMERIC
        items:
          $ref: '#/definitions/AerospikeAmcEntityIndexResponse'
        type: array
      lastUpdate:
        description: Last Update Of This Entity in Unix Seconds
        example: 9.1746587e+18
        format: int64
        type: integer
      name:
        description: Set Name
        example: Customers
        type: string
    required:
    - name
    - entityType
    - lastUpdate
    title: 'Mediatype identifier: application/vnd.aerospike.amc.entity.set.response+json;
      view=default'
    type: object
  AerospikeAmcIndexWrapperResponse:
    description: AMC Index Response Wrapper (default view)
    example:
      indexes:
        Aliquam deleniti porro itaque sit doloremque asperiores.:
        - Stats:
            Autem aut vitae quam et dignissimos et.: false
          bin: Aut deserunt nulla saepe rerum harum.
          binType: Modi est sit.
          name: Nam voluptas.
          namespace: Dolorum itaque sunt.
          set: Totam enim sit ducimus tenetur.
          syncOnAllNodes: Repudiandae ea dolores aut.
        - Stats:
            Autem aut vitae quam et dignissimos et.: false
          bin: Aut deserunt nulla saepe rerum harum.
          binType: Modi est sit.
          name: Nam voluptas.
          namespace: Dolorum itaque sunt.
          set: Totam enim sit ducimus tenetur.
          syncOnAllNodes: Repudiandae ea dolores aut.
      status: "on"
    properties:
      indexes:
        additionalProperties: true
        description: Index Data
        example:
          Aliquam deleniti porro itaque sit doloremque asperiores.:
          - Stats:
              Autem aut vitae quam et dignissimos et.: false
            bin: Aut deserunt nulla saepe rerum harum.
            binType: Modi est sit.
            name: Nam voluptas.
            namespace: Dolorum itaque sunt.
            set: Totam enim sit ducimus tenetur.
            syncOnAllNodes: Repudiandae ea dolores aut.
          - Stats:
              Autem aut vitae quam et dignissimos et.: false
            bin: Aut deserunt nulla saepe rerum harum.
            binType: Modi est sit.
            name: Nam voluptas.
            namespace: Dolorum itaque sunt.
            set: Totam enim sit ducimus tenetur.
            syncOnAllNodes: Repudiandae ea dolores aut.
        type: object
      status:
        description: Cluster/Node Status
        example: "on"
        type: string
    required:
    - status
    - indexes
    title: 'Mediatype identifier: application/vnd.aerospike.amc.index.wrapper.response+json;
      view=default'
    type: object
  AerospikeAmcNamespaceResponse:
    description: Namespace End Point (default view)
    example:
      disk:
        free-bytes: 5.1929137e+18
        total-bytes: 5.9448296e+18
        used-bytes: 4.00024e+18
      memory:
        free-bytes: 5.1929137e+18
        total-bytes: 5.9448296e+18
        used-bytes: 4.00024e+18
      name: Qui debitis.
      stats:
        Ea molestiae veritatis aliquam.: 73fc4605-edbf-4fa3-8ea8-1bc62a4b4fbd
      status: Omnis praesentium.
    properties:
      disk:
        $ref: '#/definitions/AerospikeAmcResourceUsageResponse'
      memory:
        $ref: '#/definitions/AerospikeAmcResourceUsageResponse'
      name:
        description: Namespace Name
        example: Qui debitis.
        type: string
      stats:
        additionalProperties: true
        description: Namespace statistics
        example:
          Ea molestiae veritatis aliquam.: 73fc4605-edbf-4fa3-8ea8-1bc62a4b4fbd
        type: object
      status:
        description: Cluster/Node status
        example: Omnis praesentium.
        type: string
    required:
    - name
    - memory
    - disk
    - status
    - stats
    title: 'Mediatype identifier: application/vnd.aerospike.amc.namespace.response+json;
      view=default'
    type: object
  AerospikeAmcResourceUsageResponse:
    description: Resource Usage (default view)
    example:
      free-bytes: 5.1929137e+18
      total-bytes: 5.9448296e+18
      used-bytes: 4.00024e+18
    properties:
      free-bytes:
        description: Free Bytes
        example: 5.1929137e+18
        format: int64
        type: integer
      total-bytes:
        description: Total Bytes
        example: 5.9448296e+18
        format: int64
        type: integer
      used-bytes:
        description: Used Bytes
        example: 4.00024e+18
        format: int64
        type: integer
    required:
    - used-bytes
    - free-bytes
    - total-bytes
    title: 'Mediatype identifier: application/vnd.aerospike.amc.resource.usage.response+json;
      view=default'
    type: object
  AerospikeAmcSystemResponse:
    description: AMC Server System information (default view)
    example:
      version: "5.0"
    properties:
      version:
        description: AMC Version
        example: "5.0"
        type: string
    title: 'Mediatype identifier: application/vnd.aerospike.amc.system.response+json;
      view=default'
    type: object
  AerospikeAmcThroughputWrapperResponse:
    description: AMC Throughput Response Wrapper (default view)
    example:
      status: "on"
      throughput:
        Cumque nihil dignissimos sit quas.:
          Ut voluptas.:
          - failed: 0.83985823
            successful: 0.27065128
            timestamp: 8.2189924e+17
    properties:
      status:
        description: Cluster/Node Status
        example: "on"
        type: string
      throughput:
        additionalProperties: true
        description: Throughput Data
        example:
          Cumque nihil dignissimos sit quas.:
            Ut voluptas.:
            - failed: 0.83985823
              successful: 0.27065128
              timestamp: 8.2189924e+17
        type: object
    required:
    - status
    - throughput
    title: 'Mediatype identifier: application/vnd.aerospike.amc.throughput.wrapper.response+json;
      view=default'
    type: object
  AerospikeAmcUserQueryResponse:
    description: User (default view)
    example:
      active: true
      fullName: Ada Lovelace
      notes: A Genius
      roles:
      - ops
      - dev
      username: ada
    properties:
      active:
        description: User account is active
        example: true
        type: boolean
      fullName:
        description: User's fullname
        example: Ada Lovelace
        type: string
      notes:
        description: Additional Notes
        example: A Genius
        type: string
      roles:
        description: AMC User Roles
        example:
        - ops
        - dev
        items:
          example: Quam dicta natus.
          type: string
        type: array
      username:
        description: User Id
        example: ada
        type: string
    required:
    - username
    title: 'Mediatype identifier: application/vnd.aerospike.amc.user.query.response+json;
      view=default'
    type: object
  AerospikeAmcVersionInfoResponse:
    description: Resource Usage (default view)
    example:
      latestVersion: Rerum autem perspiciatis ut eaque sunt eum.
      versionList:
        Magni ducimus quam eaque ullam maiores.:
        - Similique error rerum.
        - Similique error rerum.
        - Similique error rerum.
    properties:
      latestVersion:
        description: Latest server version used in the cluster
        example: Rerum autem perspiciatis ut eaque sunt eum.
        type: string
      versionList:
        additionalProperties: true
        description: Map of server versions to nodes
        example:
          Magni ducimus quam eaque ullam maiores.:
          - Similique error rerum.
          - Similique error rerum.
          - Similique error rerum.
        type: object
    required:
    - versionList
    - latestVersion
    title: 'Mediatype identifier: application/vnd.aerospike.amc.version.info.response+json;
      view=default'
    type: object
  AuthenticateAuthPayload:
    example:
      password: password
      user: username
    properties:
      password:
        description: AMC User's Password
        example: password
        type: string
      user:
        description: AMC User Name (this is not the same as Database user name)
        example: username
        type: string
    required:
    - user
    - password
    title: AuthenticateAuthPayload
    type: object
  ConnectConnectionPayload:
    example:
      password: "123456"
      username: admin
    properties:
      password:
        description: Database User's Password
        example: "123456"
        type: string
      username:
        description: Database Username
        example: admin
        type: string
    required:
    - username
    - password
    title: ConnectConnectionPayload
    type: object
  DropIndexPayload:
    example:
      namespace: test
      setName: test
    properties:
      namespace:
        description: Index's Namespace
        example: test
        type: string
      setName:
        description: Index's Set Name
        example: test
        type: string
    required:
    - namespace
    - setName
    title: DropIndexPayload
    type: object
  NodeSeed:
    example:
      host: 127.0.0.1
      port: 3000
      tlsName: ""
    properties:
      host:
        description: Node Host. Valid DNS, IPv4 or IPv6 value
        example: 127.0.0.1
        type: string
      port:
        description: Node's port
        example: 3000
        maximum: 65535
        minimum: 0
        type: integer
      tlsName:
        description: Node's TLS name
        example: ""
        type: string
    required:
    - host
    - port
    title: NodeSeed
    type: object
  SaveConnectionPayload:
    example:
      connId: 70f01ba5-b14f-47d9-8d69-c5b4e960d88b
      connectOnLogin: false
      name: Payments Cluster
      seeds:
      - host: 127.0.0.1
        port: 3000
        tlsName: ""
    properties:
      connId:
        description: Connection Id
        example: 70f01ba5-b14f-47d9-8d69-c5b4e960d88b
        pattern: '[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}'
        type: string
      connectOnLogin:
        description: Should AMC connect to this cluster automatically after user login?
        example: false
        type: boolean
      name:
        description: Connection Name
        example: Payments Cluster
        type: string
      seeds:
        description: Seeds
        example:
        - host: 127.0.0.1
          port: 3000
          tlsName: ""
        items:
          $ref: '#/definitions/NodeSeed'
        type: array
    required:
    - name
    - seeds
    title: SaveConnectionPayload
    type: object
  SaveIndexPayload:
    example:
      binName: Et voluptate et rerum molestiae enim.
      indexName: idxAccounts
      namespace: Ut inventore.
      setName: Repudiandae distinctio magnam accusantium voluptas et.
      type: NUMERIC
    properties:
      binName:
        description: Index's Bin name
        example: Et voluptate et rerum molestiae enim.
        type: string
      indexName:
        description: Index's Name
        example: idxAccounts
        type: string
      namespace:
        description: Index's Namespace
        example: Ut inventore.
        type: string
      setName:
        description: Index's Set name
        example: Repudiandae distinctio magnam accusantium voluptas et.
        type: string
      type:
        description: Index's type
        example: NUMERIC
        pattern: (?i)[NUMERIC|STRING]
        type: string
    required:
    - indexName
    - namespace
    - setName
    - binName
    - type
    title: SaveIndexPayload
    type: object
  SaveModulePayload:
    example:
      name: reports
      source: Sit porro natus eveniet velit ducimus laboriosam.
      type: LUA
    properties:
      name:
        description: Module's Name
        example: reports
        type: string
      source:
        description: Module's Source Code
        example: Sit porro natus eveniet velit ducimus laboriosam.
        type: string
      type:
        description: Module's type
        example: LUA
        pattern: (?i)LUA
        type: string
    required:
    - name
    - source
    - type
    title: SaveModulePayload
    type: object
  SaveUserPayload:
    example:
      active: true
      fullName: Ada Lovelace
      notes: A Genius
      password: password
      roles:
      - ops
      - dev
      username: ada
    properties:
      active:
        description: User account is active
        example: true
        type: boolean
      fullName:
        description: User's fullname
        example: Ada Lovelace
        type: string
      notes:
        description: Additional Notes
        example: A Genius
        type: string
      password:
        description: Password
        example: password
        type: string
      roles:
        description: 'Valid roles are: admin, ops, dev'
        example:
        - ops
        - dev
        items:
          example: Et et odit doloremque et.
          type: string
        type: array
      username:
        description: AMC User Id
        example: ada
        type: string
    required:
    - username
    - roles
    title: SaveUserPayload
    type: object
  error:
    description: Error response media type (default view)
    example:
      code: invalid_value
      detail: Value of ID must be an integer
      id: 3F1FKVRR
      meta:
        timestamp: 1.458609e+09
      status: "400"
    properties:
      code:
        description: an application-specific error code, expressed as a string value.
        example: invalid_value
        type: string
      detail:
        description: a human-readable explanation specific to this occurrence of the
          problem.
        example: Value of ID must be an integer
        type: string
      id:
        description: a unique identifier for this particular occurrence of the problem.
        example: 3F1FKVRR
        type: string
      meta:
        additionalProperties: true
        description: a meta object containing non-standard meta-information about
          the error.
        example:
          timestamp: 1.458609e+09
        type: object
      status:
        description: the HTTP status code applicable to this problem, expressed as
          a string value.
        example: "400"
        type: string
    title: 'Mediatype identifier: application/vnd.goa.error; view=default'
    type: object
info:
  description: Aerospike Management Console is used to manage and monitor Aerospike
    Database Clusters.
  title: Aerospike Management Console
  version: ""
paths:
  /{filepath}:
    get:
      operationId: public#/*filepath
      parameters:
      - description: Relative file path
        in: path
        name: filepath
        required: true
        type: string
      responses:
        "200":
          description: File downloaded
          schema:
            type: file
        "404":
          description: File not found
          schema:
            $ref: '#/definitions/error'
      schemes:
      - http
      - https
      summary: Download static_v5/
  /api/v1/amc/system:
    get:
      description: Get AMC Server Version and Information
      operationId: amc#system
      produces:
      - application/vnd.aerospike.amc.system.response+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/AerospikeAmcSystemResponse'
        "500":
          description: Internal Server Error
      schemes:
      - http
      - https
      summary: system amc
      tags:
      - amc
  /api/v1/auth/authenticate:
    post:
      description: Authenticate a device
      operationId: auth#authenticate
      parameters:
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/AuthenticateAuthPayload'
      responses:
        "204":
          description: No Content
          headers:
            Authorization:
              description: Generated JWT
              type: string
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "500":
          description: Internal Server Error
      schemes:
      - http
      - https
      summary: authenticate auth
      tags:
      - auth
  /api/v1/connections:
    get:
      description: |-
        Get the list of user connections

        Required security scopes:
          * `api:general`
      operationId: connection#query
      produces:
      - text/plain
      responses:
        "200":
          description: OK
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      schemes:
      - http
      - https
      security:
      - jwt:
        - api:general
      summary: query connection
      tags:
      - connection
    post:
      description: |-
        Register or Update a new connection for user

        Required security scopes:
          * `api:general`
      operationId: connection#save
      parameters:
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/SaveConnectionPayload'
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      schemes:
      - http
      - https
      security:
      - jwt:
        - api:general
      summary: save connection
      tags:
      - connection
  /api/v1/connections/{connId}:
    delete:
      description: |-
        Delete a connection

        Required security scopes:
          * `api:general`
      operationId: connection#delete
      parameters:
      - description: Connection Id
        in: path
        name: connId
        pattern: '[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}'
        required: true
        type: string
      responses:
        "204":
          description: No Content
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      schemes:
      - http
      - https
      security:
      - jwt:
        - api:general
      summary: delete connection
      tags:
      - connection
    get:
      description: |-
        Get the user connection

        Required security scopes:
          * `api:general`
      operationId: connection#show
      parameters:
      - description: Connection Id
        in: path
        name: connId
        pattern: '[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}'
        required: true
        type: string
      produces:
      - application/vnd.aerospike.amc.connection.response+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/AerospikeAmcConnectionResponse'
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      schemes:
      - http
      - https
      security:
      - jwt:
        - api:general
      summary: show connection
      tags:
      - connection
    post:
      description: |-
        Connect to the cluster and return the entity tree

        Required security scopes:
          * `api:general`
      operationId: connection#connect
      parameters:
      - description: Connection Id
        in: path
        name: connId
        pattern: '[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}'
        required: true
        type: string
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/ConnectConnectionPayload'
      produces:
      - application/vnd.aerospike.amc.connection.tree.response+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/AerospikeAmcConnectionTreeResponse'
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "500":
          description: Internal Server Error
      schemes:
      - http
      - https
      security:
      - jwt:
        - api:general
      summary: connect connection
      tags:
      - connection
  /api/v1/connections/{connId}/indexes:
    get:
      description: |-
        Query a cluster's indexes

        Required security scopes:
          * `api:general`
      operationId: index#query
      parameters:
      - description: Connection Id
        in: path
        name: connId
        pattern: '[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}'
        required: true
        type: string
      - description: Index stats should be included in the results
        in: query
        name: includeStats
        required: true
        type: boolean
      produces:
      - application/vnd.aerospike.amc.index.wrapper.response+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/AerospikeAmcIndexWrapperResponse'
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "500":
          description: Internal Server Error
      schemes:
      - http
      - https
      security:
      - jwt:
        - api:general
      summary: query index
      tags:
      - index
    post:
      description: |-
        Save a index in the cluster

        Required security scopes:
          * `api:general`
      operationId: index#save
      parameters:
      - description: Connection Id
        in: path
        name: connId
        pattern: '[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}'
        required: true
        type: string
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/SaveIndexPayload'
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "500":
          description: Internal Server Error
      schemes:
      - http
      - https
      security:
      - jwt:
        - api:general
      summary: save index
      tags:
      - index
  /api/v1/connections/{connId}/indexes/{name}:
    delete:
      description: |-
        Drop a index from the cluster

        Required security scopes:
          * `api:general`
      operationId: index#drop
      parameters:
      - description: Connection Id
        in: path
        name: connId
        pattern: '[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}'
        required: true
        type: string
      - description: Index's Name
        in: path
        name: name
        required: true
        type: string
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/DropIndexPayload'
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      schemes:
      - http
      - https
      security:
      - jwt:
        - api:general
      summary: drop index
      tags:
      - index
    get:
      description: |-
        Get a index

        Required security scopes:
          * `api:general`
      operationId: index#show
      parameters:
      - description: Connection Id
        in: path
        name: connId
        pattern: '[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}'
        required: true
        type: string
      - in: path
        name: name
        required: true
        type: string
      produces:
      - application/vnd.aerospike.amc.index.wrapper.response+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/AerospikeAmcIndexWrapperResponse'
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      schemes:
      - http
      - https
      security:
      - jwt:
        - api:general
      summary: show index
      tags:
      - index
  /api/v1/connections/{connId}/modules:
    get:
      description: |-
        Query a cluster's modules

        Required security scopes:
          * `api:general`
      operationId: module#query
      parameters:
      - description: Connection Id
        in: path
        name: connId
        pattern: '[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}'
        required: true
        type: string
      produces:
      - text/plain
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "500":
          description: Internal Server Error
      schemes:
      - http
      - https
      security:
      - jwt:
        - api:general
      summary: query module
      tags:
      - module
    post:
      description: |-
        Save a module in the cluster

        Required security scopes:
          * `api:general`
      operationId: module#save
      parameters:
      - description: Connection Id
        in: path
        name: connId
        pattern: '[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}'
        required: true
        type: string
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/SaveModulePayload'
      produces:
      - application/vnd.aerospike.amc.connection.modules.response+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/AerospikeAmcConnectionModulesResponseFull'
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "500":
          description: Internal Server Error
      schemes:
      - http
      - https
      security:
      - jwt:
        - api:general
      summary: save module
      tags:
      - module
  /api/v1/connections/{connId}/modules/{name}:
    delete:
      description: |-
        Drop a module from the cluster

        Required security scopes:
          * `api:general`
      operationId: module#drop
      parameters:
      - description: Connection Id
        in: path
        name: connId
        pattern: '[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}'
        required: true
        type: string
      - description: Module's Name
        in: path
        name: name
        required: true
        type: string
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      schemes:
      - http
      - https
      security:
      - jwt:
        - api:general
      summary: drop module
      tags:
      - module
    get:
      description: |-
        Get a cluster's module

        Required security scopes:
          * `api:general`
      operationId: module#show
      parameters:
      - description: Connection Id
        in: path
        name: connId
        pattern: '[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}'
        required: true
        type: string
      - in: path
        name: name
        required: true
        type: string
      produces:
      - application/vnd.aerospike.amc.connection.modules.response+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/AerospikeAmcConnectionModulesResponseFull'
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      schemes:
      - http
      - https
      security:
      - jwt:
        - api:general
      summary: show module
      tags:
      - module
  /api/v1/connections/{connId}/namespaces:
    get:
      description: |-
        Query cluster's namespaces

        Required security scopes:
          * `api:general`
      operationId: connection#namespaces
      parameters:
      - description: Connection Id
        in: path
        name: connId
        pattern: '[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}'
        required: true
        type: string
      produces:
      - text/plain
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "500":
          description: Internal Server Error
      schemes:
      - http
      - https
      security:
      - jwt:
        - api:general
      summary: namespaces connection
      tags:
      - connection
  /api/v1/connections/{connId}/nodes/{node}:
    get:
      description: |-
        Get a cluster's nodes

        Required security scopes:
          * `api:general`
      operationId: node#show
      parameters:
      - description: Connection Id
        in: path
        name: connId
        pattern: '[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}'
        required: true
        type: string
      - description: Node Addresses
        in: path
        name: node
        required: true
        type: string
      produces:
      - text/plain
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      schemes:
      - http
      - https
      security:
      - jwt:
        - api:general
      summary: show node
      tags:
      - node
  /api/v1/connections/{connId}/nodes/{node}/latency:
    get:
      description: |-
        Returns the aggregate latency of the node namespaces for a given window of time. If From/To are not specified, the latest throughput will be returned.

        Required security scopes:
          * `api:enterprise`
      operationId: node#latency
      parameters:
      - description: Connection Id
        in: path
        name: connId
        pattern: '[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}'
        required: true
        type: string
      - description: From time in unix seconds
        in: query
        name: from
        required: false
        type: integer
      - description: Node Address
        in: path
        name: node
        required: true
        type: string
      - description: Until time in unix seconds
        in: query
        name: until
        required: false
        type: integer
      produces:
      - text/plain
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
        "501":
          description: Not Implemented
      schemes:
      - http
      - https
      security:
      - jwt:
        - api:enterprise
      summary: latency node
      tags:
      - node
  /api/v1/connections/{connId}/nodes/{node}/namespaces:
    get:
      description: |-
        Query a node's namespaces

        Required security scopes:
          * `api:general`
      operationId: namespace#query
      parameters:
      - description: Connection Id
        in: path
        name: connId
        pattern: '[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}'
        required: true
        type: string
      - description: Node Addresses
        in: path
        name: node
        required: true
        type: string
      produces:
      - text/plain
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "500":
          description: Internal Server Error
      schemes:
      - http
      - https
      security:
      - jwt:
        - api:general
      summary: query namespace
      tags:
      - namespace
  /api/v1/connections/{connId}/nodes/{node}/namespaces/{namespace}:
    get:
      description: |-
        Get a cluster's namespace

        Required security scopes:
          * `api:general`
      operationId: namespace#show
      parameters:
      - description: Connection Id
        in: path
        name: connId
        pattern: '[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}'
        required: true
        type: string
      - description: Namespace
        in: path
        name: namespace
        required: true
        type: string
      - description: Node Addresses
        in: path
        name: node
        required: true
        type: string
      produces:
      - application/vnd.aerospike.amc.namespace.response+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/AerospikeAmcNamespaceResponse'
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "500":
          description: Internal Server Error
      schemes:
      - http
      - https
      security:
      - jwt:
        - api:general
      summary: show namespace
      tags:
      - namespace
  /api/v1/connections/{connId}/nodes/{node}/namespaces/{namespace}/latency:
    get:
      description: |-
        Returns the aggregate latency of the namespace for a given window of time. If From/To are not specified, the latest throughput will be returned.

        Required security scopes:
          * `api:enterprise`
      operationId: namespace#latency
      parameters:
      - description: Connection Id
        in: path
        name: connId
        pattern: '[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}'
        required: true
        type: string
      - description: From time in unix seconds
        in: query
        name: from
        required: false
        type: integer
      - description: Namespace name
        in: path
        name: namespace
        required: true
        type: string
      - description: Node Addresses
        in: path
        name: node
        required: true
        type: string
      - description: Until time in unix seconds
        in: query
        name: until
        required: false
        type: integer
      produces:
      - text/plain
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
        "501":
          description: Not Implemented
      schemes:
      - http
      - https
      security:
      - jwt:
        - api:enterprise
      summary: latency namespace
      tags:
      - namespace
  /api/v1/connections/{connId}/nodes/{node}/namespaces/{namespace}/sets:
    get:
      description: |-
        Query a cluster's namespaces

        Required security scopes:
          * `api:general`
      operationId: set#query
      parameters:
      - description: Connection Id
        in: path
        name: connId
        pattern: '[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}'
        required: true
        type: string
      - description: Namespace
        in: path
        name: namespace
        required: true
        type: string
      - description: Node Addresses
        in: path
        name: node
        required: true
        type: string
      produces:
      - text/plain
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "500":
          description: Internal Server Error
      schemes:
      - http
      - https
      security:
      - jwt:
        - api:general
      summary: query set
      tags:
      - set
  /api/v1/connections/{connId}/nodes/{node}/namespaces/{namespace}/sets/{setName}:
    delete:
      description: |-
        Drop a set from the cluster (Supported by Aerospike server versions v3.12+)

        Required security scopes:
          * `api:general`
      operationId: set#drop
      parameters:
      - description: Connection Id
        in: path
        name: connId
        pattern: '[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}'
        required: true
        type: string
      - description: Namespace
        in: path
        name: namespace
        required: true
        type: string
      - description: Node Addresses
        in: path
        name: node
        required: true
        type: string
      - description: Set's Name
        in: path
        name: setName
        required: true
        type: string
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      schemes:
      - http
      - https
      security:
      - jwt:
        - api:general
      summary: drop set
      tags:
      - set
    get:
      description: |-
        Get a namespace's set

        Required security scopes:
          * `api:general`
      operationId: set#show
      parameters:
      - description: Connection Id
        in: path
        name: connId
        pattern: '[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}'
        required: true
        type: string
      - description: Namespace
        in: path
        name: namespace
        required: true
        type: string
      - description: Node Addresses
        in: path
        name: node
        required: true
        type: string
      - description: Set name
        in: path
        name: setName
        required: true
        type: string
      produces:
      - text/plain
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      schemes:
      - http
      - https
      security:
      - jwt:
        - api:general
      summary: show set
      tags:
      - set
  /api/v1/connections/{connId}/nodes/{node}/namespaces/{namespace}/throughput:
    get:
      description: |-
        Returns the aggregate throughput of the namespace for a given window of time. If From/To are not specified, the latest throughput will be returned.

        Required security scopes:
          * `api:general`
      operationId: namespace#throughput
      parameters:
      - description: Connection Id
        in: path
        name: connId
        pattern: '[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}'
        required: true
        type: string
      - description: From time in unix seconds
        in: query
        name: from
        required: false
        type: integer
      - description: Namespace
        in: path
        name: namespace
        required: true
        type: string
      - description: Node Addresses
        in: path
        name: node
        required: true
        type: string
      - description: Until time in unix seconds
        in: query
        name: until
        required: false
        type: integer
      produces:
      - application/vnd.aerospike.amc.throughput.wrapper.response+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/AerospikeAmcThroughputWrapperResponse'
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      schemes:
      - http
      - https
      security:
      - jwt:
        - api:general
      summary: throughput namespace
      tags:
      - namespace
  /api/v1/connections/{connId}/nodes/{node}/throughput:
    get:
      description: |-
        Returns the aggregate throughput of the node namespaces for a given window of time. If From/To are not specified, the latest throughput will be returned.

        Required security scopes:
          * `api:general`
      operationId: node#throughput
      parameters:
      - description: Connection Id
        in: path
        name: connId
        pattern: '[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}'
        required: true
        type: string
      - description: From time in unix seconds
        in: query
        name: from
        required: false
        type: integer
      - description: Node Address
        in: path
        name: node
        required: true
        type: string
      - description: Until time in unix seconds
        in: query
        name: until
        required: false
        type: integer
      produces:
      - application/vnd.aerospike.amc.throughput.wrapper.response+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/AerospikeAmcThroughputWrapperResponse'
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      schemes:
      - http
      - https
      security:
      - jwt:
        - api:general
      summary: throughput node
      tags:
      - node
  /api/v1/connections/{connId}/throughput:
    get:
      description: |-
        Returns the aggregate throughput of the connection nodes for a given window of time. If From/To are not specified, the latest throughput will be returned.

        Required security scopes:
          * `api:general`
      operationId: connection#throughput
      parameters:
      - description: Connection Id
        in: path
        name: connId
        pattern: '[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}'
        required: true
        type: string
      - description: From time in unix seconds
        in: query
        name: from
        required: false
        type: integer
      - description: Until time in unix seconds
        in: query
        name: until
        required: false
        type: integer
      produces:
      - application/vnd.aerospike.amc.throughput.wrapper.response+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/AerospikeAmcThroughputWrapperResponse'
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      schemes:
      - http
      - https
      security:
      - jwt:
        - api:general
      summary: throughput connection
      tags:
      - connection
  /api/v1/users:
    get:
      description: |-
        Get the list of users

        Required security scopes:
          * `api:admin`
      operationId: user#query
      produces:
      - text/plain
      responses:
        "200":
          description: OK
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      schemes:
      - http
      - https
      security:
      - jwt:
        - api:admin
      summary: query user
      tags:
      - user
    post:
      description: |-
        Register or Update a new user

        Required security scopes:
          * `api:admin`
      operationId: user#save
      parameters:
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/SaveUserPayload'
      produces:
      - application/vnd.aerospike.amc.user.query.response+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/AerospikeAmcUserQueryResponse'
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      schemes:
      - http
      - https
      security:
      - jwt:
        - api:admin
      summary: save user
      tags:
      - user
  /api/v1/users/{username}:
    delete:
      description: |-
        Delete a user

        Required security scopes:
          * `api:admin`
      operationId: user#delete
      parameters:
      - in: path
        name: username
        required: true
        type: string
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      schemes:
      - http
      - https
      security:
      - jwt:
        - api:admin
      summary: delete user
      tags:
      - user
    get:
      description: |-
        Get the list of users

        Required security scopes:
          * `api:admin`
      operationId: user#get
      parameters:
      - in: path
        name: username
        required: true
        type: string
      produces:
      - application/vnd.aerospike.amc.user.query.response+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/AerospikeAmcUserQueryResponse'
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      schemes:
      - http
      - https
      security:
      - jwt:
        - api:admin
      summary: get user
      tags:
      - user
  /static/{filepath}:
    get:
      operationId: public#/static/*filepath
      parameters:
      - description: Relative file path
        in: path
        name: filepath
        required: true
        type: string
      responses:
        "200":
          description: File downloaded
          schema:
            type: file
        "404":
          description: File not found
          schema:
            $ref: '#/definitions/error'
      schemes:
      - http
      - https
      summary: Download static_v5/
  /swagger.json:
    get:
      operationId: swagger#/swagger.json
      responses:
        "200":
          description: File downloaded
          schema:
            type: file
      schemes:
      - http
      - https
      summary: Download swagger/swagger.json
produces:
- application/json
responses:
  BadRequest:
    description: Bad Request
  Forbidden:
    description: Forbidden
  InternalServerError:
    description: Internal Server Error
  NoContent:
    description: No Content
  NotFound:
    description: Not Found
  Unauthorized:
    description: Unauthorized
schemes:
- http
- https
securityDefinitions:
  jwt:
    description: |2-


      **Security Scopes**:
        * `api:cluster`: API access to cluster resources
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
