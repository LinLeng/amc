// Code generated by goagen v1.2.0-dirty, DO NOT EDIT.
//
// API "amc": Application Media Types
//
// Command:
// $ goagen
// --design=github.com/citrusleaf/amc/api_design
// --out=$(GOPATH)/src/github.com/citrusleaf/amc/temp
// --version=v1.2.0-dirty

package app

import (
	"github.com/goadesign/goa"
)

// User Connection (default view)
//
// Identifier: application/vnd.aerospike.amc.connection.query.response+json; view=default
type AerospikeAmcConnectionQueryResponse struct {
	// Connection Id
	ID string `form:"id" json:"id" xml:"id"`
	// Connection Name
	Name string `form:"name" json:"name" xml:"name"`
	// Seeds
	Seeds []*NodeSeed `form:"seeds,omitempty" json:"seeds,omitempty" xml:"seeds,omitempty"`
}

// Validate validates the AerospikeAmcConnectionQueryResponse media type instance.
func (mt *AerospikeAmcConnectionQueryResponse) Validate() (err error) {
	if mt.ID == "" {
		err = goa.MergeErrors(err, goa.MissingAttributeError(`response`, "id"))
	}
	if mt.Name == "" {
		err = goa.MergeErrors(err, goa.MissingAttributeError(`response`, "name"))
	}
	for _, e := range mt.Seeds {
		if e != nil {
			if err2 := e.Validate(); err2 != nil {
				err = goa.MergeErrors(err, err2)
			}
		}
	}
	return
}

// AMC Server System information (default view)
//
// Identifier: application/vnd.aerospike.amc.system.response+json; view=default
type AerospikeAmcSystemResponse struct {
	// AMC Version
	Version *string `form:"version,omitempty" json:"version,omitempty" xml:"version,omitempty"`
}
